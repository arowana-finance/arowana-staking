/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  InitializableProxy,
  InitializableProxyInterface,
} from "../../../../contracts/proxy/InitializableProxy.sol/InitializableProxy.js";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "ERC1967InvalidAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "DescriptionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "changeProxyDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610acf8061001f6000396000f3fe6080604052600436106100745760003560e01c80635c60da1b1161004e5780635c60da1b146100f05780639f712f2f14610105578063aba0017314610125578063ee0530f41461013857610083565b80633e47158c1461008b5780634f1ef286146100bd5780635a28dda4146100d057610083565b366100835761008161015a565b005b61008161015a565b34801561009757600080fd5b506100a061016c565b6040516001600160a01b0390911681526020015b60405180910390f35b6100816100cb366004610785565b61017b565b3480156100dc57600080fd5b506100816100eb3660046107d3565b61030e565b3480156100fc57600080fd5b506100a06103cd565b34801561011157600080fd5b50610081610120366004610810565b6103d7565b610081610133366004610832565b610431565b34801561014457600080fd5b5061014d6104bf565b6040516100b491906108e0565b61016a610165610570565b61057a565b565b60006101766105a3565b905090565b61018361016c565b6001600160a01b0316336001600160a01b031614806101b057506101a561016c565b6001600160a01b0316155b6101d55760405162461bcd60e51b81526004016101cc90610913565b60405180910390fd5b816001600160a01b03163b60000361020b57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016101cc565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156102eb57600080836001600160a01b0316836040516102939190610936565b600060405180830381855af49150503d80600081146102ce576040519150601f19603f3d011682016040523d82523d6000602084013e6102d3565b606091505b5091509150816102e557805181602001fd5b50505050565b341561030a5760405163b398979f60e01b815260040160405180910390fd5b5050565b61031661016c565b6001600160a01b0316336001600160a01b03161480610343575061033861016c565b6001600160a01b0316155b61035f5760405162461bcd60e51b81526004016101cc90610913565b8051156103ca577ffcba12fcf625f4823c7c0c86b97ab29721afc9e784836bc00bf04553a0c8dff461039182826109da565b507f8a1bce929b257bfd582fa164d9b9fa4d4b0b7442b10b3aad23e2c56aa4e0d61a816040516103c191906108e0565b60405180910390a15b50565b6000610176610570565b6103df61016c565b6001600160a01b0316336001600160a01b0316148061040c575061040161016c565b6001600160a01b0316155b6104285760405162461bcd60e51b81526004016101cc90610913565b6103ca816105d6565b600061043b610570565b6001600160a01b03161480156104615750600061045661016c565b6001600160a01b0316145b6104a35760405162461bcd60e51b81526020600482015260136024820152721053149150511657d253925512505312569151606a1b60448201526064016101cc565b6104ad828261017b565b6104b68461030e565b6102e5836103d7565b60607ffcba12fcf625f4823c7c0c86b97ab29721afc9e784836bc00bf04553a0c8dff480546104ed90610952565b80601f016020809104026020016040519081016040528092919081815260200182805461051990610952565b80156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b5050505050905090565b600061017661062a565b3660008037600080366000845af43d6000803e808015610599573d6000f35b3d6000fd5b505050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6105ff6105a3565b604080516001600160a01b03928316815291841660208301520160405180910390a16103ca81610652565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6105c7565b6001600160a01b03811661067c57604051633173bdd160e11b8152600060048201526024016101cc565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610380546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b03811681146106d457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261070057600080fd5b81356020830160008067ffffffffffffffff841115610721576107216106d9565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715610750576107506106d9565b60405283815290508082840187101561076857600080fd5b838360208301376000602085830101528094505050505092915050565b6000806040838503121561079857600080fd5b6107a1836106bd565b9150602083013567ffffffffffffffff8111156107bd57600080fd5b6107c9858286016106ef565b9150509250929050565b6000602082840312156107e557600080fd5b813567ffffffffffffffff8111156107fc57600080fd5b610808848285016106ef565b949350505050565b60006020828403121561082257600080fd5b61082b826106bd565b9392505050565b6000806000806080858703121561084857600080fd5b843567ffffffffffffffff81111561085f57600080fd5b61086b878288016106ef565b94505061087a602086016106bd565b9250610888604086016106bd565b9150606085013567ffffffffffffffff8111156108a457600080fd5b6108b0878288016106ef565b91505092959194509250565b60005b838110156108d75781810151838201526020016108bf565b50506000910152565b60208152600082518060208401526108ff8160408501602087016108bc565b601f01601f19169190910160400192915050565b6020808252600990820152682727aa2fa0a226a4a760b91b604082015260600190565b600082516109488184602087016108bc565b9190910192915050565b600181811c9082168061096657607f821691505b60208210810361098657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561059e57806000526020600020601f840160051c810160208510156109b35750805b601f840160051c820191505b818110156109d357600081556001016109bf565b5050505050565b815167ffffffffffffffff8111156109f4576109f46106d9565b610a0881610a028454610952565b8461098c565b6020601f821160018114610a3c5760008315610a245750848201515b600019600385901b1c1916600184901b1784556109d3565b600084815260208120601f198516915b82811015610a6c5787850151825560209485019460019092019101610a4c565b5084821015610a8a5786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea26469706673582212207775e981ada864e614617b242907f005d9d1395b6032d2d9df22515a3ddeda2364736f6c634300081e0033";

type InitializableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitializableProxyConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitializableProxy__factory extends ContractFactory {
  constructor(...args: InitializableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InitializableProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InitializableProxy__factory {
    return super.connect(runner) as InitializableProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializableProxyInterface {
    return new Interface(_abi) as InitializableProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): InitializableProxy {
    return new Contract(address, _abi, runner) as unknown as InitializableProxy;
  }
}
