/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  DataFeed,
  DataFeedInterface,
} from "../../../../contracts/oracle/DataFeed.sol/DataFeed.js";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newSettler",
        type: "address",
      },
    ],
    name: "AddSettler",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "NewAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "NewDescription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "startedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldSettler",
        type: "address",
      },
    ],
    name: "RemoveSettler",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settler",
        type: "address",
      },
    ],
    name: "addSettler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deploymentTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getTimestampAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "int256",
        name: "_initAnswer",
        type: "int256",
      },
    ],
    name: "initializeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initOwner",
        type: "address",
      },
    ],
    name: "initializeSettler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settler",
        type: "address",
      },
    ],
    name: "removeSettler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "setAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "setDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "setVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settlers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "newAnswer",
        type: "int256",
      },
    ],
    name: "updateAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526006600455348015601457600080fd5b50601b601f565b60cf565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615606e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460cc5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6111d5806100de6000396000f3fe608060405234801561001057600080fd5b50600436106101725760003560e01c80637dbaadf6116100de578063b1da41fe11610097578063bfc12c0511610071578063bfc12c0514610383578063d0d552dd1461038c578063f2fde38b1461039f578063feaf968c146103b257600080fd5b8063b1da41fe1461032e578063b5ab58dc14610343578063b633620c1461036357600080fd5b80637dbaadf6146102755780638205bf6a146102885780638da5cb5b1461029157806390c3f38f146102c15780639a6fc8f5146102d4578063a87a20ce1461031b57600080fd5b8063408def1e11610130578063408def1e1461022a57806350d25bcd1461023d57806354fd4d5014610246578063668a0f021461024f578063715018a6146102585780637284e4161461026057600080fd5b8062b105e61461017757806314d3940d1461018c578063313ce5671461019f578063329bad17146101be57806338d52e0f146101d15780633b2235fc146101fc575b600080fd5b61018a610185366004610db0565b6103ba565b005b61018a61019a366004610db0565b61045c565b6101a7600881565b60405160ff90911681526020015b60405180910390f35b61018a6101cc366004610db0565b6104f5565b6002546101e4906001600160a01b031681565b6040516001600160a01b0390911681526020016101b5565b61021c61020a366004610dcb565b600b6020526000908152604090205481565b6040519081526020016101b5565b61018a610238366004610dcb565b61064b565b61021c60065481565b61021c60045481565b61021c60085481565b61018a610658565b61026861066c565b6040516101b59190610de4565b61018a610283366004610ed7565b6106fa565b61021c60075481565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101e4565b61018a6102cf366004610f3d565b610736565b6102e76102e2366004610f7a565b61077a565b604080516001600160501b03968716815260208101959095528401929092526060830152909116608082015260a0016101b5565b61018a610329366004610dcb565b6107f8565b61033661088e565b6040516101b59190610fa3565b61021c610351366004610dcb565b60096020526000908152604090205481565b61021c610371366004610dcb565b600a6020526000908152604090205481565b61021c60055481565b61018a61039a366004610db0565b61089f565b61018a6103ad366004610db0565b6108f1565b6102e761092f565b6103c2610953565b6103cd6000826109c9565b6104105760405162461bcd60e51b815260206004820152600f60248201526e24a72b20a624a22fa9a2aa2a2622a960891b60448201526064015b60405180910390fd5b61041b6000826109f0565b506040516001600160a01b03821681527fc75b24622d5a8552bcfe775a11d9009ac47d4c050a3af79686aebe33f902fc03906020015b60405180910390a150565b610464610953565b61046f6000826109c9565b156104b05760405162461bcd60e51b8152602060048201526011602482015270222aa82624a1a0aa22afa9a2aa2a2622a960791b6044820152606401610407565b6104bb600082610a05565b506040516001600160a01b03821681527f0e8d4de8d62b8ad5b1837a4a13009121b82a40e3bdcd6e6f454a72418cc86b0e90602001610451565b60006104ff610a1a565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156105275750825b905060008267ffffffffffffffff1660011480156105445750303b155b905081158015610552575080155b156105705760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561059a57845460ff60401b1916600160401b1785555b6001600160a01b0386166105ac573395505b6105b586610a43565b6105c0600087610a05565b506040516001600160a01b03871681527f0e8d4de8d62b8ad5b1837a4a13009121b82a40e3bdcd6e6f454a72418cc86b0e9060200160405180910390a1831561064357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b610653610953565b600455565b610660610953565b61066a6000610a54565b565b6003805461067990610fef565b80601f01602080910402602001604051908101604052809291908181526020018280546106a590610fef565b80156106f25780601f106106c7576101008083540402835291602001916106f2565b820191906000526020600020905b8154815290600101906020018083116106d557829003601f168201915b505050505081565b42600555600660045561070c8361089f565b61071582610736565b80156107275761072781600042610ac5565b610730846104f5565b50505050565b61073e610953565b600361074a8282611078565b507f16fbb51445345dabaa215e5f99a4bd4d8ba9818b508c76d5cd0ea30abcc491c6816040516104519190610de4565b6001600160501b0381166000818152600960205260408120548392909190819081906107a8576005546107d0565b600a60006107c060016001600160501b038a1661114d565b8152602001908152602001600020545b6001600160501b0387166000908152600a602052604090205495979496909594909350915050565b6108036000336109c9565b8061081557506108136000610b91565b155b61084f5760405162461bcd60e51b815260206004820152600b60248201526a2727aa2fa9a2aa2a2622a960a91b6044820152606401610407565b60006008546000141580610864575060065415155b61086f57600061087d565b60085461087d906001611160565b905061088a828242610ac5565b5050565b606061089a6000610b9b565b905090565b6108a7610953565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fc7d9598af6004de7fa9c489a50a55414c75cfbce9fe56fe46956970744d6bc2c90600090a250565b6108f9610953565b6001600160a01b03811661092357604051631e4fbdf760e01b815260006004820152602401610407565b61092c81610a54565b50565b600080600080600061094260085461077a565b945094509450945094509091929394565b60006109867f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b90506001600160a01b038116158015906109a957506001600160a01b0381163314155b1561092c5760405163118cdaa760e01b8152336004820152602401610407565b6001600160a01b038116600090815260018301602052604081205415155b90505b92915050565b60006109e7836001600160a01b038416610baf565b60006109e7836001600160a01b038416610ca2565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006109ea565b610a4b610cf1565b61092c81610d16565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b8060075410610ad357505050565b6006839055600781905560088290556000828152600a6020908152604080832080546009845282852088905590859055848452600b909252909120849055151580610b5057604051828152339084907f0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac602719060200160405180910390a35b82847f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f84604051610b8391815260200190565b60405180910390a350505050565b60006109ea825490565b60606000610ba883610d1e565b9392505050565b60008181526001830160205260408120548015610c98576000610bd360018361114d565b8554909150600090610be79060019061114d565b9050808214610c4c576000866000018281548110610c0757610c07611173565b9060005260206000200154905080876000018481548110610c2a57610c2a611173565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c5d57610c5d611189565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506109ea565b60009150506109ea565b6000818152600183016020526040812054610ce9575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556109ea565b5060006109ea565b610cf9610d7a565b61066a57604051631afcd79f60e31b815260040160405180910390fd5b6108f9610cf1565b606081600001805480602002602001604051908101604052809291908181526020018280548015610d6e57602002820191906000526020600020905b815481526020019060010190808311610d5a575b50505050509050919050565b6000610d84610a1a565b54600160401b900460ff16919050565b80356001600160a01b0381168114610dab57600080fd5b919050565b600060208284031215610dc257600080fd5b6109e782610d94565b600060208284031215610ddd57600080fd5b5035919050565b602081526000825180602084015260005b81811015610e125760208186018101516040868401015201610df5565b506000604082850101526040601f19601f83011684010191505092915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e5957600080fd5b813567ffffffffffffffff811115610e7357610e73610e32565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610ea257610ea2610e32565b604052818152838201602001851015610eba57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215610eed57600080fd5b610ef685610d94565b9350610f0460208601610d94565b9250604085013567ffffffffffffffff811115610f2057600080fd5b610f2c87828801610e48565b949793965093946060013593505050565b600060208284031215610f4f57600080fd5b813567ffffffffffffffff811115610f6657600080fd5b610f7284828501610e48565b949350505050565b600060208284031215610f8c57600080fd5b81356001600160501b0381168114610ba857600080fd5b602080825282518282018190526000918401906040840190835b81811015610fe45783516001600160a01b0316835260209384019390920191600101610fbd565b509095945050505050565b600181811c9082168061100357607f821691505b60208210810361102357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561107357806000526020600020601f840160051c810160208510156110505750805b601f840160051c820191505b81811015611070576000815560010161105c565b50505b505050565b815167ffffffffffffffff81111561109257611092610e32565b6110a6816110a08454610fef565b84611029565b6020601f8211600181146110da57600083156110c25750848201515b600019600385901b1c1916600184901b178455611070565b600084815260208120601f198516915b8281101561110a57878501518255602094850194600190920191016110ea565b50848210156111285786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b818103818111156109ea576109ea611137565b808201808211156109ea576109ea611137565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122021c71eafd4a23b1f4d3ef5c4ed5ad696a914a99818d57a2d9bb9efe6a6aefb3c64736f6c634300081e0033";

type DataFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataFeedConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataFeed__factory extends ContractFactory {
  constructor(...args: DataFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DataFeed__factory {
    return super.connect(runner) as DataFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataFeedInterface {
    return new Interface(_abi) as DataFeedInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DataFeed {
    return new Contract(address, _abi, runner) as unknown as DataFeed;
  }
}
