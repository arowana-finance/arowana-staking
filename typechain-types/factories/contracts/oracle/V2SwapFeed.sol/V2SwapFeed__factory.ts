/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  V2SwapFeed,
  V2SwapFeedInterface,
} from "../../../../contracts/oracle/V2SwapFeed.sol/V2SwapFeed.js";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "NewAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "NewDescription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "startedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    inputs: [],
    name: "USD",
    outputs: [
      {
        internalType: "contract IERC20Exp",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "V2Price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IERC20Exp",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deploymentTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethUsdPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feedImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getLPTVL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getLPUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "getPairByToken",
    outputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "getTokenUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feedImplementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_USD",
        type: "address",
      },
    ],
    name: "initializeSwapFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapFactory",
    outputs: [
      {
        internalType: "contract IUniswapV2Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethUsdPair",
    outputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526008608052600660025534801561001a57600080fd5b50610023610028565b6100da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100785760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516119e061010a6000396000818161018f01528181610a2501528181610cf50152610d5201526119e06000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806363e16a82116100ad5780638205bf6a116100715780638205bf6a146102765780639478ab8c1461027c578063ad5c464814610284578063bfc12c0514610297578063d4d3e9a5146102a057600080fd5b806363e16a8214610220578063668a0f02146102355780636c3721ed1461023b5780637284e4161461024e5780637944f9441461026357600080fd5b806338d52e0f116100f457806338d52e0f146101d657806338e9781b146101e957806350d25bcd146101fc57806352ef619b1461020457806354fd4d501461021757600080fd5b8063178bc56e146101315780631bf6c21b14610161578063287bd79e14610174578063313ce5671461018a578063320eb93c146101c3575b600080fd5b600454610144906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600854610144906001600160a01b031681565b61017c6102b3565b604051908152602001610158565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610158565b61017c6101d136600461138c565b6102fc565b600054610144906001600160a01b031681565b61017c6101f736600461138c565b610316565b61017c6103d3565b600654610144906001600160a01b031681565b61017c60025481565b61023361022e3660046113b0565b6103dd565b005b4361017c565b61014461024936600461138c565b61072c565b610256610990565b6040516101589190611445565b600554610144906001600160a01b031681565b4261017c565b61017c610a1e565b600754610144906001600160a01b031681565b61017c60035481565b61017c6102ae36600461138c565b610a7c565b600080546102c9906001600160a01b0316610b6a565b6102e7576000546102e2906001600160a01b03166102fc565b905090565b6000546102e2906001600160a01b0316610a7c565b600061031061030a8361072c565b83610c41565b92915050565b60008061032283610dea565b905060006103308483610e8f565b50915050816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190611478565b6103a190600a611598565b816103ac8685610c41565b6103b691906115a7565b6103c19060026115a7565b6103cb91906115be565b949350505050565b60006102e26102b3565b60006103e7610f49565b805490915060ff600160401b820416159067ffffffffffffffff1660008115801561040f5750825b905060008267ffffffffffffffff16600114801561042c5750303b155b90508115801561043a575080155b156104585760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561048257845460ff60401b1916600160401b1785555b600080546001600160a01b0319166001600160a01b038c169081178255604080516395d89b4160e01b81529051610592936395d89b4192600480820193918290030181865afa1580156104d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261050191908101906115f6565b604080518082018252600381526201017960ed1b602082015260085482516395d89b4160e01b8152925161058d936001600160a01b03909216916395d89b419160048083019260009291908290030181865afa158015610565573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261058d91908101906115f6565b610f72565b60019061059f9082611734565b50600660025542600355600480546001600160a01b038b81166001600160a01b0319928316178355600580548c831693168317905560405163e6a4390560e01b81528a821693810193909352881660248301529063e6a4390590604401602060405180830381865afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d91906117f3565b600680546001600160a01b03199081166001600160a01b03938416179091556007805482168a841617905560088054909116888316179055604051908b16907fc7d9598af6004de7fa9c489a50a55414c75cfbce9fe56fe46956970744d6bc2c90600090a27f16fbb51445345dabaa215e5f99a4bd4d8ba9818b508c76d5cd0ea30abcc491c660016040516106d29190611810565b60405180910390a1831561072057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b60055460085460405163e6a4390560e01b81526001600160a01b03848116600483015291821660248201526000928392169063e6a4390590604401602060405180830381865afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a891906117f3565b60055460075460405163e6a4390560e01b81526001600160a01b038781166004830152918216602482015292935060009291169063e6a4390590604401602060405180830381865afa158015610802573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082691906117f3565b905060006001600160a01b03831661083f5760006108a9565b6040516370a0823160e01b81526001600160a01b0384811660048301528616906370a0823190602401602060405180830381865afa158015610885573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a9919061189c565b905060006001600160a01b0383166108c257600061092c565b6040516370a0823160e01b81526001600160a01b0384811660048301528716906370a0823190602401602060405180830381865afa158015610908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c919061189c565b90508115801561093a575080155b156109765760405162461bcd60e51b81526020600482015260076024820152662727afa820a4a960c91b60448201526064015b60405180910390fd5b808210156109845782610986565b835b9695505050505050565b6001805461099d906116ab565b80601f01602080910402602001604051908101604052809291908181526020018280546109c9906116ab565b8015610a165780601f106109eb57610100808354040283529160200191610a16565b820191906000526020600020905b8154815290600101906020018083116109f957829003601f168201915b505050505081565b6000610a4b7f000000000000000000000000000000000000000000000000000000000000000060126118b5565b610a5690600a611598565b600654600754610a72916001600160a01b039081169116610f9e565b6102e291906115be565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae0919061189c565b826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b429190611478565b610b4d90600a611598565b610b5684610316565b610b6091906115a7565b61031091906115be565b60408051600481526024810182526020810180516001600160e01b031663c45a015560e01b1790529051600091829182916001600160a01b0386169161c35091610bb3916118ce565b6000604051808303818686fa925050503d8060008114610bef576040519150601f19603f3d011682016040523d82523d6000602084013e610bf4565b606091505b5091509150811580610c0557508051155b15610c14575060009392505050565b80806020019051810190610c2891906117f3565b6005546001600160a01b03908116911614949350505050565b6000806000610c4f8561125c565b90925090506001600160a01b03848116908316148080610c805750816001600160a01b0316856001600160a01b0316145b610cc15760405162461bcd60e51b815260206004820152601260248201527124a72b20a624a22fa820a4a92faa27a5a2a760711b604482015260640161096d565b6000610cce86858561132c565b6008546007549192506001600160a01b0380841691811682149216148115610d4757610d1b7f000000000000000000000000000000000000000000000000000000000000000060126118b5565b610d2690600a611598565b610d308a8a610f9e565b610d3a91906115be565b9650505050505050610310565b8015610db357610d787f000000000000000000000000000000000000000000000000000000000000000060246118b5565b610d8390600a611598565b600654600754610d9f916001600160a01b039081169116610f9e565b610da98b8b610f9e565b610d3091906115a7565b60405162461bcd60e51b815260206004820152600c60248201526b24a72b20a624a22fa820a4a960a11b604482015260640161096d565b6000806000610df88461125c565b6008549193509150610e14906001600160a01b0316838361132c565b92506001600160a01b038316610e3e57600754610e3b906001600160a01b0316838361132c565b92505b6001600160a01b038316610e885760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f504149525f4241534560781b604482015260640161096d565b5050919050565b600080600080610e9e8661125c565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f069190611906565b5090925090506001600160a01b038781169084161480610f2857808284610f2c565b8083835b919b6001600160701b039182169b50911698509650505050505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610310565b60608282604051602001610f87929190611956565b604051602081830303815290604052905092915050565b6000806000610fac8561125c565b915091506000806000610fbf8888610e8f565b9250925092508280610fe25750836001600160a01b0316876001600160a01b0316145b6110235760405162461bcd60e51b815260206004820152601260248201527124a72b20a624a22fa820a4a92faa27a5a2a760711b604482015260640161096d565b811580159061103157508015155b61106c5760405162461bcd60e51b815260206004820152600c60248201526b4e4f5f4c495155494449545960a01b604482015260640161096d565b60008361115157856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d59190611478565b856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111379190611478565b611142906012611985565b61114c91906118b5565b61122a565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561118f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b39190611478565b866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112159190611478565b611220906012611985565b61122a91906118b5565b60ff1690508261123b82600a61199e565b61124590846115a7565b61124f91906115be565b9998505050505050505050565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561129d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c191906117f3565b836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132391906117f3565b91509150915091565b6000826001600160a01b0316846001600160a01b03161461136d57816001600160a01b0316846001600160a01b0316146113675760006103cb565b826103cb565b5092915050565b6001600160a01b038116811461138957600080fd5b50565b60006020828403121561139e57600080fd5b81356113a981611374565b9392505050565b600080600080600060a086880312156113c857600080fd5b85356113d381611374565b945060208601356113e381611374565b935060408601356113f381611374565b9250606086013561140381611374565b9150608086013561141381611374565b809150509295509295909350565b60005b8381101561143c578181015183820152602001611424565b50506000910152565b6020815260008251806020840152611464816040850160208701611421565b601f01601f19169190910160400192915050565b60006020828403121561148a57600080fd5b815160ff811681146113a957600080fd5b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114ec578085048111156114d0576114d061149b565b60018416156114de57908102905b60019390931c9280026114b5565b935093915050565b60008261150357506001610310565b8161151057506000610310565b816001811461152657600281146115305761154c565b6001915050610310565b60ff8411156115415761154161149b565b50506001821b610310565b5060208310610133831016604e8410600b841016171561156f575081810a610310565b61157c60001984846114b1565b80600019048211156115905761159061149b565b029392505050565b60006113a960ff8416836114f4565b80820281158282048414176103105761031061149b565b6000826115db57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561160857600080fd5b815167ffffffffffffffff81111561161f57600080fd5b8201601f8101841361163057600080fd5b805167ffffffffffffffff81111561164a5761164a6115e0565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611679576116796115e0565b60405281815282820160200186101561169157600080fd5b6116a2826020830160208601611421565b95945050505050565b600181811c908216806116bf57607f821691505b6020821081036116df57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561172f57806000526020600020601f840160051c8101602085101561170c5750805b601f840160051c820191505b8181101561172c5760008155600101611718565b50505b505050565b815167ffffffffffffffff81111561174e5761174e6115e0565b6117628161175c84546116ab565b846116e5565b6020601f821160018114611796576000831561177e5750848201515b600019600385901b1c1916600184901b17845561172c565b600084815260208120601f198516915b828110156117c657878501518255602094850194600190920191016117a6565b50848210156117e45786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60006020828403121561180557600080fd5b81516113a981611374565b602081526000808354611822816116ab565b8060208601526001821660008114611841576001811461185d57611891565b60ff1983166040870152604082151560051b8701019350611891565b86600052602060002060005b8381101561188857815488820160400152600190910190602001611869565b87016040019450505b509195945050505050565b6000602082840312156118ae57600080fd5b5051919050565b60ff82811682821603908111156103105761031061149b565b600082516118e0818460208701611421565b9190910192915050565b80516001600160701b038116811461190157600080fd5b919050565b60008060006060848603121561191b57600080fd5b611924846118ea565b9250611932602085016118ea565b9150604084015163ffffffff8116811461194b57600080fd5b809150509250925092565b60008351611968818460208801611421565b83519083019061197c818360208801611421565b01949350505050565b60ff81811683821601908111156103105761031061149b565b60006113a983836114f456fea2646970667358221220e811ba0cf2fb38c43d656a583cb7ce77a29b4d79e2b33297d0af15cd0869234364736f6c634300081e0033";

type V2SwapFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: V2SwapFeedConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class V2SwapFeed__factory extends ContractFactory {
  constructor(...args: V2SwapFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      V2SwapFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): V2SwapFeed__factory {
    return super.connect(runner) as V2SwapFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V2SwapFeedInterface {
    return new Interface(_abi) as V2SwapFeedInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): V2SwapFeed {
    return new Contract(address, _abi, runner) as unknown as V2SwapFeed;
  }
}
