/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  MasterChef,
  MasterChefInterface,
} from "../../../../contracts/pools/MasterChef.sol/MasterChef.js";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "WETH",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardVault",
        type: "address",
      },
    ],
    name: "InitializedChef",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newAllocPoint",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "startTime",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "endTime",
        type: "uint48",
      },
    ],
    name: "SetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardsPerSec",
        type: "uint256",
      },
    ],
    name: "SetRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_allocPoint",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "_startTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_endTime",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "_deadline",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "depositPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint48",
        name: "_fromTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_toTime",
        type: "uint48",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint48",
        name: "_fromTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_toTime",
        type: "uint48",
      },
    ],
    name: "getPoolRewardsByTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    name: "getPoolRewardsPerSec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    name: "getRewardsPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardsPerSec",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "_startTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_endTime",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "addPool",
        type: "bool",
      },
    ],
    name: "initializeChef",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "allocPoint",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "startTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "endTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "lastRewardTime",
        type: "uint48",
      },
      {
        internalType: "uint256",
        name: "accRewardsPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardVault",
    outputs: [
      {
        internalType: "contract IRewardVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerSec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "_allocPoint",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "_startTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_endTime",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerSec",
        type: "uint256",
      },
    ],
    name: "setRewardsPerSec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506016601a565b60ca565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560695760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b612097806100d96000396000f3fe60806040526004361061019f5760003560e01c8063715018a6116100ec578063e907d8c01161008a578063f64ba28b11610064578063f64ba28b146105b6578063f7c618c1146105d6578063f83a9e87146105f6578063ff51a2721461061657600080fd5b8063e907d8c014610522578063efaf059714610542578063f2fde38b1461059657600080fd5b80638da5cb5b116100c65780638da5cb5b1461048557806395007576146104c2578063ad5c4648146104e2578063cf2770d61461050257600080fd5b8063715018a6146104265780637b9eac7c1461043b578063859fe6c71461047257600080fd5b806317caf6f1116101595780633c9e4e3e116101335780633c9e4e3e146103b15780633d912033146103d157806361249d86146103f1578063630b5ba11461041157600080fd5b806317caf6f1146103275780632e7980a2146103595780633a2c67771461037957600080fd5b8062893452146102005780630407539914610229578063081e3eda146102495780631246dbf51461026d5780631526fe271461029d578063171e82a21461030757600080fd5b366101fb576000546001600160a01b031633036101b857005b6000546101cd906001600160a01b0316610647565b156101f957600080546001600160a01b03168152600460205260409020546101f99061ffff16346106b9565b005b600080fd5b34801561020c57600080fd5b5061021660035481565b6040519081526020015b60405180910390f35b34801561023557600080fd5b506101f9610244366004611bb9565b610739565b34801561025557600080fd5b506005545b60405161ffff9091168152602001610220565b34801561027957600080fd5b5061028d610288366004611bee565b610647565b6040519015158152602001610220565b3480156102a957600080fd5b506102bd6102b8366004611bb9565b61077c565b604080516001600160a01b03909716875263ffffffff909516602087015265ffffffffffff93841694860194909452908216606085015216608083015260a082015260c001610220565b34801561031357600080fd5b506101f9610322366004611c55565b6107e6565b34801561033357600080fd5b506007546103449063ffffffff1681565b60405163ffffffff9091168152602001610220565b34801561036557600080fd5b5061025a610374366004611cba565b610a00565b34801561038557600080fd5b50600254610399906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b3480156103bd57600080fd5b506101f96103cc366004611cdb565b610c63565b3480156103dd57600080fd5b506101f96103ec366004611d6b565b610e17565b3480156103fd57600080fd5b5061021661040c366004611d95565b610e5f565b34801561041d57600080fd5b506101f9610e76565b34801561043257600080fd5b506101f9610ea1565b34801561044757600080fd5b5061045b610456366004611db0565b610eb5565b60405165ffffffffffff9091168152602001610220565b6101f9610480366004611d6b565b6106b9565b34801561049157600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610399565b3480156104ce57600080fd5b506101f96104dd366004611e09565b610f92565b3480156104ee57600080fd5b50600054610399906001600160a01b031681565b34801561050e57600080fd5b506101f961051d366004611d95565b61106d565b34801561052e57600080fd5b5061021661053d366004611eed565b6110cd565b34801561054e57600080fd5b5061058161055d366004611eed565b60066020908152600092835260408084209091529082529020805460019091015482565b60408051928352602083019190915201610220565b3480156105a257600080fd5b506101f96105b1366004611bee565b611130565b3480156105c257600080fd5b506102166105d1366004611d95565b61116e565b3480156105e257600080fd5b50600154610399906001600160a01b031681565b34801561060257600080fd5b50610216610611366004611db0565b6112ae565b34801561062257600080fd5b5061025a610631366004611bee565b60046020526000908152604090205461ffff1681565b6001600160a01b03811660009081526004602052604081205461ffff161515806106b3575060055460011480156106b35750816001600160a01b0316600560008154811061069757610697611f20565b60009182526020909120600390910201546001600160a01b0316145b92915050565b6106c161134b565b60055461ffff8316106106ef5760405162461bcd60e51b81526004016106e690611f36565b60405180910390fd5b6106f98233611395565b801561070c5761070a82338361152e565b505b61073560017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5050565b61074161179c565b60038190556040518181527f403d953100676c530ee357c0fe9f352dc6c18bd4e8594c49d2107ecbad6a6f099060200160405180910390a150565b6005818154811061078c57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b038216935063ffffffff600160a01b8304169265ffffffffffff600160c01b90930483169281811692600160301b909204169086565b6107ee61179c565b60055461ffff8616106108135760405162461bcd60e51b81526004016106e690611f36565b801561082157610821610e76565b8360058661ffff168154811061083957610839611f20565b60009182526020909120600390910201546007546108679163ffffffff600160a01b90910481169116611f72565b6108719190611f8e565b600760006101000a81548163ffffffff021916908363ffffffff1602179055508360058661ffff16815481106108a9576108a9611f20565b906000526020600020906003020160000160146101000a81548163ffffffff021916908363ffffffff1602179055508260058661ffff16815481106108f0576108f0611f20565b906000526020600020906003020160000160186101000a81548165ffffffffffff021916908365ffffffffffff1602179055508160058661ffff168154811061093b5761093b611f20565b906000526020600020906003020160010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060058561ffff168154811061098557610985611f20565b6000918252602091829020600390910201546040805163ffffffff8816815265ffffffffffff80881694820194909452928516908301526001600160a01b03169061ffff8716907f68a8292d2ea1e779a0f3ac4b3d3958c3fbc336064432311947b08a714bcbf8409060600160405180910390a35050505050565b6000610a0a61179c565b610a1386610647565b15610a525760405162461bcd60e51b815260206004820152600f60248201526e111d5c1b1a58d85d195908141bdbdb608a1b60448201526064016106e6565b8115610a6057610a60610e76565b5060055460078054869190600090610a7f90849063ffffffff16611f8e565b825463ffffffff9182166101009390930a9283029282021916919091179091556001600160a01b038089166000818152600460209081526040808320805461ffff8a1661ffff199091168117909155815160c0810183528581528d881693810193845265ffffffffffff808e168285019081528d8216606084019081526080840188815260a08501898152600580546001810182559a52945160039099027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db081018054995194518616600160c01b0265ffffffffffff60c01b1995909e16600160a01b026001600160c01b0319909a169a909c169990991797909717919091169990991790975596517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18501805494518816600160301b026bffffffffffffffffffffffff1990951691909716179290921790945593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db29091015590519092507f68a8292d2ea1e779a0f3ac4b3d3958c3fbc336064432311947b08a714bcbf84090610c529089908990899063ffffffff93909316835265ffffffffffff918216602084015216604082015260600190565b60405180910390a395945050505050565b6000610c6d611812565b805490915060ff600160401b820416159067ffffffffffffffff16600081158015610c955750825b905060008267ffffffffffffffff166001148015610cb25750303b155b905081158015610cc0575080155b15610cde5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610d0857845460ff60401b1916600160401b1785555b610d1061183b565b600080546001600160a01b03808f166001600160a01b031992831617909255600180548e841690831617905560028054928d1692909116919091179055610d5689610739565b8515610d6e57610d6c8b6103e88a8a6000610a00565b505b610d778d61184b565b604080516001600160a01b038e811682528d811660208301528c168183015290517fe86209b390e8076baf4c4a616512319eb81d91e8b1f8ca206e88c5ff1c264e149181900360600190a18315610e0857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b610e1f61134b565b60055461ffff831610610e445760405162461bcd60e51b81526004016106e690611f36565b610e4e8233611395565b801561070c5761070a82338361185c565b60006106b382610e70600142611faa565b426112ae565b60055460005b818161ffff16101561073557610e918161106d565b610e9a81611fbd565b9050610e7c565b610ea961179c565b610eb36000611924565b565b60008165ffffffffffff168365ffffffffffff1610610ed657506000610f8b565b600060058561ffff1681548110610eef57610eef611f20565b6000918252602082206003909102018054600182015491935065ffffffffffff600160c01b909104811692918116919087168310610f2d5782610f2f565b865b905060008265ffffffffffff168765ffffffffffff1610610f505782610f52565b865b90508065ffffffffffff168265ffffffffffff1610610f7957600095505050505050610f8b565b610f838282611fde565b955050505050505b9392505050565b6000806000610fa084611995565b92509250925060058761ffff1681548110610fbd57610fbd611f20565b600091825260209091206003909102015460405163d505accf60e01b81523360048201523060248201526044810188905265ffffffffffff8716606482015260ff8516608482015260a4810184905260c481018390526001600160a01b039091169063d505accf9060e401600060405180830381600087803b15801561104257600080fd5b505af1158015611056573d6000803e3d6000fd5b5050505061106487876106b9565b50505050505050565b600060058261ffff168154811061108657611086611f20565b9060005260206000209060030201905061109f8261116e565b600282015560010180546bffffffffffff0000000000001916600160301b4265ffffffffffff160217905550565b61ffff821660009081526006602090815260408083206001600160a01b03851684529091528120600181015464e8d4a510006111088661116e565b83546111149190611ffc565b61111e9190612013565b6111289190611faa565b949350505050565b61113861179c565b6001600160a01b03811661116257604051631e4fbdf760e01b8152600060048201526024016106e6565b61116b81611924565b50565b60008060058361ffff168154811061118857611188611f20565b600091825260208083206040805160c08101825260039490940290910180546001600160a01b038116808652600160a01b820463ffffffff1694860194909452600160c01b900465ffffffffffff9081168584015260018201548082166060870152600160301b90041660808501526002015460a0840181905290516370a0823160e01b815230600482015292945092916370a0823190602401602060405180830381865afa15801561123f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112639190612035565b905080156112a657600061127c868560800151426112ae565b90508161128e8264e8d4a51000611ffc565b6112989190612013565b6112a2908461204e565b9250505b509392505050565b60075460009063ffffffff1681036112c857506000610f8b565b600060058561ffff16815481106112e1576112e1611f20565b6000918252602090912060075460039283029091018054925490935063ffffffff91821692600160a01b90049091169061131c888888610eb5565b65ffffffffffff1661132e9190611ffc565b6113389190611ffc565b6113429190612013565b95945050505050565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080546001190161138f57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b600060058361ffff16815481106113ae576113ae611f20565b6000918252602080832061ffff871684526006825260408085206001600160a01b03881686529092529220600390910290910191506113ec8461106d565b80541561151e576000816001015464e8d4a51000846002015484600001546114149190611ffc565b61141e9190612013565b6114289190611faa565b9050801561151c576002546001600160a01b03166114ab576001546040516340c10f1960e01b81526001600160a01b03868116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b15801561148e57600080fd5b505af11580156114a2573d6000803e3d6000fd5b5050505061151c565b60025460015460405163ae63932960e01b81526001600160a01b03918216600482015286821660248201526044810184905291169063ae63932990606401600060405180830381600087803b15801561150357600080fd5b505af1158015611517573d6000803e3d6000fd5b505050505b505b61152884846119df565b50505050565b60008060058561ffff168154811061154857611548611f20565b6000918252602080832061ffff891684526006825260408085206001600160a01b03808b16875293528420935460039093020180549094508116911614801561159057508334145b156116015760008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b1580156115e357600080fd5b505af11580156115f7573d6000803e3d6000fd5b5050505050611700565b81546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166d9190612035565b8354909150611687906001600160a01b0316873088611a5c565b82546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156116ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f29190612035565b6116fc9190611faa565b9450505b83816000016000828254611714919061204e565b90915550611724905086866119df565b8561ffff16856001600160a01b03167f2c00706df3fbb4a8ead830d4c0a7f278823843af15ad7e680c4f7db763dd779c8660405161176491815260200190565b60405180910390a35091949350505050565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b60006117cf7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b90506001600160a01b03811633148015906117f257506001600160a01b03811615155b1561116b5760405163118cdaa760e01b81523360048201526024016106e6565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006106b3565b611843611ac3565b610eb3611ae8565b611853611ac3565b61116b81611af0565b60008060058561ffff168154811061187657611876611f20565b6000918252602080832061ffff891684526006825260408085206001600160a01b038a1686529092529083208054600390930290910193509185918391906118bf908490611faa565b909155505081546118da906001600160a01b03168686611af8565b6118e486866119df565b8561ffff16856001600160a01b03167f4e2ebfe79f50514ade8e774c7f3c01250d6aa3a91cd1f5c33a78df9c459f6e9d8660405161176491815260200190565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080600083516041036119bf5750505060208101516040820151606083015160001a91906119d8565b604051634be6321b60e01b815260040160405180910390fd5b9193909250565b600060058361ffff16815481106119f8576119f8611f20565b6000918252602080832061ffff871684526006825260408085206001600160a01b038816865290925292206002600390920290920190810154825491935064e8d4a5100091611a479190611ffc565b611a519190612013565b600190910155505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526115289186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611b2e565b611acb611b9f565b610eb357604051631afcd79f60e31b815260040160405180910390fd5b611776611ac3565b611138611ac3565b6040516001600160a01b03838116602483015260448201839052611b2991859182169063a9059cbb90606401611a91565b505050565b600080602060008451602086016000885af180611b51576040513d6000823e3d81fd5b50506000513d91508115611b69578060011415611b76565b6001600160a01b0384163b155b1561152857604051635274afe760e01b81526001600160a01b03851660048201526024016106e6565b6000611ba9611812565b54600160401b900460ff16919050565b600060208284031215611bcb57600080fd5b5035919050565b80356001600160a01b0381168114611be957600080fd5b919050565b600060208284031215611c0057600080fd5b610f8b82611bd2565b803561ffff81168114611be957600080fd5b803563ffffffff81168114611be957600080fd5b803565ffffffffffff81168114611be957600080fd5b80358015158114611be957600080fd5b600080600080600060a08688031215611c6d57600080fd5b611c7686611c09565b9450611c8460208701611c1b565b9350611c9260408701611c2f565b9250611ca060608701611c2f565b9150611cae60808701611c45565b90509295509295909350565b600080600080600060a08688031215611cd257600080fd5b611c7686611bd2565b600080600080600080600080610100898b031215611cf857600080fd5b611d0189611bd2565b9750611d0f60208a01611bd2565b9650611d1d60408a01611bd2565b9550611d2b60608a01611bd2565b945060808901359350611d4060a08a01611c2f565b9250611d4e60c08a01611c2f565b9150611d5c60e08a01611c45565b90509295985092959890939650565b60008060408385031215611d7e57600080fd5b611d8783611c09565b946020939093013593505050565b600060208284031215611da757600080fd5b610f8b82611c09565b600080600060608486031215611dc557600080fd5b611dce84611c09565b9250611ddc60208501611c2f565b9150611dea60408501611c2f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611e1f57600080fd5b611e2885611c09565b935060208501359250611e3d60408601611c2f565b9150606085013567ffffffffffffffff811115611e5957600080fd5b8501601f81018713611e6a57600080fd5b803567ffffffffffffffff811115611e8457611e84611df3565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611eb357611eb3611df3565b604052818152828201602001891015611ecb57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215611f0057600080fd5b611f0983611c09565b9150611f1760208401611bd2565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b125b9d985b1a5908141bdbdb60a21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b63ffffffff82811682821603908111156106b3576106b3611f5c565b63ffffffff81811683821601908111156106b3576106b3611f5c565b818103818111156106b3576106b3611f5c565b600061ffff821661ffff8103611fd557611fd5611f5c565b60010192915050565b65ffffffffffff82811682821603908111156106b3576106b3611f5c565b80820281158282048414176106b3576106b3611f5c565b60008261203057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561204757600080fd5b5051919050565b808201808211156106b3576106b3611f5c56fea2646970667358221220e34cfeda41048bd9af9d6cea7f2593b45626c03459bb7944cc1f364b9972054e64736f6c634300081e0033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MasterChef & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MasterChef__factory {
    return super.connect(runner) as MasterChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new Interface(_abi) as MasterChefInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MasterChef {
    return new Contract(address, _abi, runner) as unknown as MasterChef;
  }
}
