/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  MasterChef,
  MasterChefInterface,
} from "../../../../contracts/pools/MasterChef.sol/MasterChef.js";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "WETH",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardVault",
        type: "address",
      },
    ],
    name: "InitializedChef",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newAllocPoint",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "endTime",
        type: "uint64",
      },
    ],
    name: "SetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardsPerSec",
        type: "uint256",
      },
    ],
    name: "SetRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_allocPoint",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "_startTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_endTime",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_deadline",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "depositPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint64",
        name: "_fromTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_toTime",
        type: "uint64",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint64",
        name: "_fromTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_toTime",
        type: "uint64",
      },
    ],
    name: "getPoolRewardsByTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    name: "getPoolRewardsPerSec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    name: "getRewardsPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardsPerSec",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_startTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_endTime",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "addPool",
        type: "bool",
      },
    ],
    name: "initializeChef",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "allocPoint",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "startTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lastRewardTime",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "accRewardsPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardVault",
    outputs: [
      {
        internalType: "contract IRewardVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerSec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "_allocPoint",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "_startTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_endTime",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerSec",
        type: "uint256",
      },
    ],
    name: "setRewardsPerSec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506016601a565b60ca565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560695760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6120ae806100d96000396000f3fe60806040526004361061019f5760003560e01c80638da5cb5b116100ec578063e907d8c01161008a578063f64ba28b11610064578063f64ba28b146105b8578063f7c618c1146105d8578063fc7e4227146105f8578063ff51a2721461061857600080fd5b8063e907d8c014610524578063efaf059714610544578063f2fde38b1461059857600080fd5b8063ad5c4648116100c6578063ad5c4648146104a4578063b072797e146104c4578063cf2770d6146104e4578063d024fe7b1461050457600080fd5b80638da5cb5b146104275780638ef3d24d14610464578063a373e68d1461048457600080fd5b80633a2c677711610159578063630b5ba111610133578063630b5ba1146103b2578063715018a6146103c7578063859fe6c7146103dc5780638ae74894146103ef57600080fd5b80633a2c67771461033a5780633d9120331461037257806361249d861461039257600080fd5b8062893452146102005780630407539914610229578063081e3eda146102495780631246dbf51461026d5780631526fe271461029d57806317caf6f11461030857600080fd5b366101fb576000546001600160a01b031633036101b857005b6000546101cd906001600160a01b0316610649565b156101f957600080546001600160a01b03168152600460205260409020546101f99061ffff16346106bb565b005b600080fd5b34801561020c57600080fd5b5061021660035481565b6040519081526020015b60405180910390f35b34801561023557600080fd5b506101f9610244366004611bd1565b61073b565b34801561025557600080fd5b506005545b60405161ffff9091168152602001610220565b34801561027957600080fd5b5061028d610288366004611c06565b610649565b6040519015158152602001610220565b3480156102a957600080fd5b506102bd6102b8366004611bd1565b61077e565b604080516001600160a01b03909716875263ffffffff90951660208701526001600160401b0393841694860194909452908216606085015216608083015260a082015260c001610220565b34801561031457600080fd5b506007546103259063ffffffff1681565b60405163ffffffff9091168152602001610220565b34801561034657600080fd5b5060025461035a906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b34801561037e57600080fd5b506101f961038d366004611c33565b6107e9565b34801561039e57600080fd5b506102166103ad366004611c5d565b610831565b3480156103be57600080fd5b506101f9610848565b3480156103d357600080fd5b506101f9610873565b6101f96103ea366004611c33565b6106bb565b3480156103fb57600080fd5b5061040f61040a366004611c8f565b610887565b6040516001600160401b039091168152602001610220565b34801561043357600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031661035a565b34801561047057600080fd5b506101f961047f366004611ce8565b61096b565b34801561049057600080fd5b5061021661049f366004611c8f565b610a47565b3480156104b057600080fd5b5060005461035a906001600160a01b031681565b3480156104d057600080fd5b506101f96104df366004611dd9565b610ae5565b3480156104f057600080fd5b506101f96104ff366004611c5d565b610c97565b34801561051057600080fd5b506101f961051f366004611e7d565b610cfc565b34801561053057600080fd5b5061021661053f366004611ee2565b610f1b565b34801561055057600080fd5b5061058361055f366004611ee2565b60066020908152600092835260408084209091529082529020805460019091015482565b60408051928352602083019190915201610220565b3480156105a457600080fd5b506101f96105b3366004611c06565b610f7e565b3480156105c457600080fd5b506102166105d3366004611c5d565b610fbc565b3480156105e457600080fd5b5060015461035a906001600160a01b031681565b34801561060457600080fd5b5061025a610613366004611f15565b6110fd565b34801561062457600080fd5b5061025a610633366004611c06565b60046020526000908152604090205461ffff1681565b6001600160a01b03811660009081526004602052604081205461ffff161515806106b5575060055460011480156106b55750816001600160a01b0316600560008154811061069957610699611f36565b60009182526020909120600390910201546001600160a01b0316145b92915050565b6106c3611363565b60055461ffff8316106106f15760405162461bcd60e51b81526004016106e890611f4c565b60405180910390fd5b6106fb82336113ad565b801561070e5761070c823383611546565b505b61073760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5050565b6107436117b4565b60038190556040518181527f403d953100676c530ee357c0fe9f352dc6c18bd4e8594c49d2107ecbad6a6f099060200160405180910390a150565b6005818154811061078e57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b038216935063ffffffff600160a01b830416926001600160401b03600160c01b90930483169281811692600160401b909204169086565b6107f1611363565b60055461ffff8316106108165760405162461bcd60e51b81526004016106e890611f4c565b61082082336113ad565b801561070e5761070c82338361182a565b60006106b582610842600142611f88565b42610a47565b60055460005b818161ffff1610156107375761086381610c97565b61086c81611f9b565b905061084e565b61087b6117b4565b61088560006118f2565b565b6000816001600160401b0316836001600160401b0316106108aa57506000610964565b600060058561ffff16815481106108c3576108c3611f36565b600091825260208220600390910201805460018201549193506001600160401b03600160c01b9091048116929181169190871683106109025782610904565b865b90506000826001600160401b0316876001600160401b0316106109275782610929565b865b9050806001600160401b0316826001600160401b03161061095257600095505050505050610964565b61095c8282611fbc565b955050505050505b9392505050565b600080600061097984611963565b92509250925060058761ffff168154811061099657610996611f36565b600091825260209091206003909102015460405163d505accf60e01b8152336004820152306024820152604481018890526001600160401b038716606482015260ff8516608482015260a4810184905260c481018390526001600160a01b039091169063d505accf9060e401600060405180830381600087803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b50505050610a3e87876106bb565b50505050505050565b60075460009063ffffffff168103610a6157506000610964565b600060058561ffff1681548110610a7a57610a7a611f36565b6000918252602090912060075460039283029091018054925490935063ffffffff91821692600160a01b900490911690610ab5888888610887565b6001600160401b0316610ac89190611fdb565b610ad29190611fdb565b610adc9190611ff2565b95945050505050565b6000610aef6119ad565b805490915060ff600160401b82041615906001600160401b0316600081158015610b165750825b90506000826001600160401b03166001148015610b325750303b155b905081158015610b40575080155b15610b5e5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610b8857845460ff60401b1916600160401b1785555b610b906119d6565b600080546001600160a01b03808f166001600160a01b031992831617909255600180548e841690831617905560028054928d1692909116919091179055610bd68961073b565b8515610bee57610bec8b6103e88a8a60006110fd565b505b610bf78d6119e6565b604080516001600160a01b038e811682528d811660208301528c168183015290517fe86209b390e8076baf4c4a616512319eb81d91e8b1f8ca206e88c5ff1c264e149181900360600190a18315610c8857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b600060058261ffff1681548110610cb057610cb0611f36565b90600052602060002090600302019050610cc982610fbc565b600282015560010180546fffffffffffffffff00000000000000001916600160401b426001600160401b03160217905550565b610d046117b4565b60055461ffff861610610d295760405162461bcd60e51b81526004016106e890611f4c565b8015610d3757610d37610848565b8360058661ffff1681548110610d4f57610d4f611f36565b6000918252602090912060039091020154600754610d7d9163ffffffff600160a01b90910481169116612014565b610d879190612030565b600760006101000a81548163ffffffff021916908363ffffffff1602179055508360058661ffff1681548110610dbf57610dbf611f36565b906000526020600020906003020160000160146101000a81548163ffffffff021916908363ffffffff1602179055508260058661ffff1681548110610e0657610e06611f36565b906000526020600020906003020160000160186101000a8154816001600160401b0302191690836001600160401b031602179055508160058661ffff1681548110610e5357610e53611f36565b906000526020600020906003020160010160006101000a8154816001600160401b0302191690836001600160401b0316021790555060058561ffff1681548110610e9f57610e9f611f36565b6000918252602091829020600390910201546040805163ffffffff881681526001600160401b0380881694820194909452928516908301526001600160a01b03169061ffff8716907f8d79088268352e1a4ae18346d3aa40ff9d49bb8ec82b846a0bc32d12a7e477e39060600160405180910390a35050505050565b61ffff821660009081526006602090815260408083206001600160a01b03851684529091528120600181015464e8d4a51000610f5686610fbc565b8354610f629190611fdb565b610f6c9190611ff2565b610f769190611f88565b949350505050565b610f866117b4565b6001600160a01b038116610fb057604051631e4fbdf760e01b8152600060048201526024016106e8565b610fb9816118f2565b50565b60008060058361ffff1681548110610fd657610fd6611f36565b600091825260208083206040805160c08101825260039490940290910180546001600160a01b038116808652600160a01b820463ffffffff1694860194909452600160c01b90046001600160401b039081168584015260018201548082166060870152600160401b90041660808501526002015460a0840181905290516370a0823160e01b815230600482015292945092916370a0823190602401602060405180830381865afa15801561108e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b2919061204c565b905080156110f55760006110cb86856080015142610a47565b9050816110dd8264e8d4a51000611fdb565b6110e79190611ff2565b6110f19084612065565b9250505b509392505050565b60006111076117b4565b61111086610649565b1561114f5760405162461bcd60e51b815260206004820152600f60248201526e111d5c1b1a58d85d195908141bdbdb608a1b60448201526064016106e8565b811561115d5761115d610848565b506005546007805486919060009061117c90849063ffffffff16612030565b825463ffffffff9182166101009390930a9283029282021916919091179091556001600160a01b038089166000818152600460209081526040808320805461ffff8a1661ffff199091168117909155815160c0810183528581528d88169381019384526001600160401b03808e168285019081528d8216606084019081526080840188815260a08501898152600580546001810182559a52945160039099027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db081018054995194518616600160c01b026001600160c01b0395909e16600160a01b026001600160c01b0319909a169a909c169990991797909717919091169990991790975596517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18501805494518816600160401b026fffffffffffffffffffffffffffffffff1990951691909716179290921790945593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db29091015590519092507f8d79088268352e1a4ae18346d3aa40ff9d49bb8ec82b846a0bc32d12a7e477e3906113529089908990899063ffffffff9390931683526001600160401b03918216602084015216604082015260600190565b60405180910390a395945050505050565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f008054600119016113a757604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b600060058361ffff16815481106113c6576113c6611f36565b6000918252602080832061ffff871684526006825260408085206001600160a01b038816865290925292206003909102909101915061140484610c97565b805415611536576000816001015464e8d4a510008460020154846000015461142c9190611fdb565b6114369190611ff2565b6114409190611f88565b90508015611534576002546001600160a01b03166114c3576001546040516340c10f1960e01b81526001600160a01b03868116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b1580156114a657600080fd5b505af11580156114ba573d6000803e3d6000fd5b50505050611534565b60025460015460405163ae63932960e01b81526001600160a01b03918216600482015286821660248201526044810184905291169063ae63932990606401600060405180830381600087803b15801561151b57600080fd5b505af115801561152f573d6000803e3d6000fd5b505050505b505b61154084846119f7565b50505050565b60008060058561ffff168154811061156057611560611f36565b6000918252602080832061ffff891684526006825260408085206001600160a01b03808b1687529352842093546003909302018054909450811691161480156115a857508334145b156116195760008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b1580156115fb57600080fd5b505af115801561160f573d6000803e3d6000fd5b5050505050611718565b81546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611661573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611685919061204c565b835490915061169f906001600160a01b0316873088611a74565b82546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156116e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170a919061204c565b6117149190611f88565b9450505b8381600001600082825461172c9190612065565b9091555061173c905086866119f7565b8561ffff16856001600160a01b03167f2c00706df3fbb4a8ead830d4c0a7f278823843af15ad7e680c4f7db763dd779c8660405161177c91815260200190565b60405180910390a35091949350505050565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b60006117e77f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b90506001600160a01b0381161580159061180a57506001600160a01b0381163314155b15610fb95760405163118cdaa760e01b81523360048201526024016106e8565b60008060058561ffff168154811061184457611844611f36565b6000918252602080832061ffff891684526006825260408085206001600160a01b038a16865290925290832080546003909302909101935091859183919061188d908490611f88565b909155505081546118a8906001600160a01b03168686611adb565b6118b286866119f7565b8561ffff16856001600160a01b03167f4e2ebfe79f50514ade8e774c7f3c01250d6aa3a91cd1f5c33a78df9c459f6e9d8660405161177c91815260200190565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000806000835160410361198d5750505060208101516040820151606083015160001a91906119a6565b604051634be6321b60e01b815260040160405180910390fd5b9193909250565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006106b5565b6119de611b11565b610885611b36565b6119ee611b11565b610fb981611b3e565b600060058361ffff1681548110611a1057611a10611f36565b6000918252602080832061ffff871684526006825260408085206001600160a01b038816865290925292206002600390920290920190810154825491935064e8d4a5100091611a5f9190611fdb565b611a699190611ff2565b600190910155505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526115409186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611b46565b6040516001600160a01b03838116602483015260448201839052611b0c91859182169063a9059cbb90606401611aa9565b505050565b611b19611bb7565b61088557604051631afcd79f60e31b815260040160405180910390fd5b61178e611b11565b610f86611b11565b600080602060008451602086016000885af180611b69576040513d6000823e3d81fd5b50506000513d91508115611b81578060011415611b8e565b6001600160a01b0384163b155b1561154057604051635274afe760e01b81526001600160a01b03851660048201526024016106e8565b6000611bc16119ad565b54600160401b900460ff16919050565b600060208284031215611be357600080fd5b5035919050565b80356001600160a01b0381168114611c0157600080fd5b919050565b600060208284031215611c1857600080fd5b61096482611bea565b803561ffff81168114611c0157600080fd5b60008060408385031215611c4657600080fd5b611c4f83611c21565b946020939093013593505050565b600060208284031215611c6f57600080fd5b61096482611c21565b80356001600160401b0381168114611c0157600080fd5b600080600060608486031215611ca457600080fd5b611cad84611c21565b9250611cbb60208501611c78565b9150611cc960408501611c78565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611cfe57600080fd5b611d0785611c21565b935060208501359250611d1c60408601611c78565b915060608501356001600160401b03811115611d3757600080fd5b8501601f81018713611d4857600080fd5b80356001600160401b03811115611d6157611d61611cd2565b604051601f8201601f19908116603f011681016001600160401b0381118282101715611d8f57611d8f611cd2565b604052818152828201602001891015611da757600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b80358015158114611c0157600080fd5b600080600080600080600080610100898b031215611df657600080fd5b611dff89611bea565b9750611e0d60208a01611bea565b9650611e1b60408a01611bea565b9550611e2960608a01611bea565b945060808901359350611e3e60a08a01611c78565b9250611e4c60c08a01611c78565b9150611e5a60e08a01611dc9565b90509295985092959890939650565b803563ffffffff81168114611c0157600080fd5b600080600080600060a08688031215611e9557600080fd5b611e9e86611c21565b9450611eac60208701611e69565b9350611eba60408701611c78565b9250611ec860608701611c78565b9150611ed660808701611dc9565b90509295509295909350565b60008060408385031215611ef557600080fd5b611efe83611c21565b9150611f0c60208401611bea565b90509250929050565b600080600080600060a08688031215611f2d57600080fd5b611e9e86611bea565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b125b9d985b1a5908141bdbdb60a21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156106b5576106b5611f72565b600061ffff821661ffff8103611fb357611fb3611f72565b60010192915050565b6001600160401b0382811682821603908111156106b5576106b5611f72565b80820281158282048414176106b5576106b5611f72565b60008261200f57634e487b7160e01b600052601260045260246000fd5b500490565b63ffffffff82811682821603908111156106b5576106b5611f72565b63ffffffff81811683821601908111156106b5576106b5611f72565b60006020828403121561205e57600080fd5b5051919050565b808201808211156106b5576106b5611f7256fea2646970667358221220da4e20fb93ce3a5df779378a2fd09a5ae0601ac1f20bbc269bda5c7389908bf064736f6c634300081e0033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MasterChef & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MasterChef__factory {
    return super.connect(runner) as MasterChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new Interface(_abi) as MasterChefInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MasterChef {
    return new Contract(address, _abi, runner) as unknown as MasterChef;
  }
}
