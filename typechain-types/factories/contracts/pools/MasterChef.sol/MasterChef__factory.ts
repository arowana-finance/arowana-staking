/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  MasterChef,
  MasterChefInterface,
} from "../../../../contracts/pools/MasterChef.sol/MasterChef.js";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "WETH",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardVault",
        type: "address",
      },
    ],
    name: "InitializedChef",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAllocPoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "SetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "SetReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "getBlockRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toBlock",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_rewardVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "addPool",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardVault",
    outputs: [
      {
        internalType: "contract IRewardVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBlockReward",
        type: "uint256",
      },
    ],
    name: "updateRewardPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611ccf8061001f6000396000f3fe60806040526004361061014f5760003560e01c80637bafb029116100b6578063d18df53c1161006f578063d18df53c14610476578063d7c5edf214610496578063e2bbb158146104b6578063f2fde38b146104c9578063f7c618c1146104e9578063ff51a2721461050957600080fd5b80637bafb0291461036f5780638ae39cac1461038f5780638da5cb5b146103a557806393f1a40b146103e2578063a17804b114610436578063ad5c46481461045657600080fd5b8063441a3e7011610108578063441a3e70146102c557806351eb05a6146102e55780635da7c1691461030557806360e4c4ce14610325578063630b5ba114610345578063715018a61461035a57600080fd5b806301f8a976146101ac578063081e3eda146101cc5780631246dbf5146101f05780631526fe271461022057806317caf6f1146102775780633a2c67771461028d57600080fd5b366101a7576000546001600160a01b0316330361016857005b60005461017d906001600160a01b0316610536565b156101a557600080546001600160a01b03168152600460205260409020546101a590346105a4565b005b600080fd5b3480156101b857600080fd5b506101a56101c73660046119e6565b610620565b3480156101d857600080fd5b506005545b6040519081526020015b60405180910390f35b3480156101fc57600080fd5b5061021061020b366004611a1b565b610536565b60405190151581526020016101e7565b34801561022c57600080fd5b5061024061023b3660046119e6565b610663565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c0016101e7565b34801561028357600080fd5b506101dd60075481565b34801561029957600080fd5b506003546102ad906001600160a01b031681565b6040516001600160a01b0390911681526020016101e7565b3480156102d157600080fd5b506101a56102e0366004611a36565b6106b3565b3480156102f157600080fd5b506101a56103003660046119e6565b6106f7565b34801561031157600080fd5b506101dd610320366004611a68565b610734565b34801561033157600080fd5b506101a5610340366004611ab8565b610953565b34801561035157600080fd5b506101a5610abf565b34801561036657600080fd5b506101a5610ade565b34801561037b57600080fd5b506101dd61038a366004611af5565b610af2565b34801561039b57600080fd5b506101dd60025481565b3480156103b157600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102ad565b3480156103ee57600080fd5b506104216103fd366004611b21565b60066020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101e7565b34801561044257600080fd5b506101a5610451366004611b4d565b610c80565b34801561046257600080fd5b506000546102ad906001600160a01b031681565b34801561048257600080fd5b506101dd610491366004611b21565b610d8a565b3480156104a257600080fd5b506101dd6104b13660046119e6565b610de8565b6101a56104c4366004611a36565b6105a4565b3480156104d557600080fd5b506101a56104e4366004611a1b565b610f4b565b3480156104f557600080fd5b506001546102ad906001600160a01b031681565b34801561051557600080fd5b506101dd610524366004611a1b565b60046020526000908152604090205481565b6001600160a01b03811660009081526004602052604081205415158061059e5750600554600114801561059e5750816001600160a01b0316600560008154811061058257610582611bcf565b60009182526020909120600690910201546001600160a01b0316145b92915050565b6105ac610f89565b60055482106105d65760405162461bcd60e51b81526004016105cd90611be5565b60405180910390fd5b6105e08233610fd3565b80156105f3576105f1823383611164565b505b61061c60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5050565b6106286113c4565b60028190556040518181527fb0864f3dd8e8d4f8f298a778d03bccfb0bc1114b8e89b686ae5a58c7d78a58759060200160405180910390a150565b6005818154811061067357600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b6106bb610f89565b60055482106106dc5760405162461bcd60e51b81526004016105cd90611be5565b6106e68233610fd3565b80156105f3576105f182338361141f565b60006005828154811061070c5761070c611bcf565b9060005260206000209060060201905061072582610de8565b60058201554360049091015550565b600061073e6113c4565b61074786610536565b156107865760405162461bcd60e51b815260206004820152600f60248201526e111d5c1b1a58d85d195908141bdbdb608a1b60448201526064016105cd565b811561079457610794610abf565b50600554600780548691906000906107ad908490611c21565b90915550506001600160a01b038681166000818152600460209081526040808320869055805160c0810182528481528083018b81528183018b815260608084018c81526080850188815260a08601898152600580546001810182559a5295517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db06006909a02998a0180546001600160a01b03191691909c1617909a5592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db188015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db287015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db386015595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4850155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5909301929092558151898152908101889052908101869052909183917fe7d0e18d4982c1e9b2d9b42996392d14cada23824467fbf84c9c34c9bc9c1631910160405180910390a395945050505050565b61095b6113c4565b600554851061097c5760405162461bcd60e51b81526004016105cd90611be5565b801561098a5761098a610abf565b836005868154811061099e5761099e611bcf565b9060005260206000209060060201600101546007546109bd9190611c34565b6109c79190611c21565b60078190555083600586815481106109e1576109e1611bcf565b9060005260206000209060060201600101819055508260058681548110610a0a57610a0a611bcf565b9060005260206000209060060201600201819055508160058681548110610a3357610a33611bcf565b90600052602060002090600602016003018190555060058581548110610a5b57610a5b611bcf565b6000918252602091829020600690910201546040805187815292830186905282018490526001600160a01b03169086907fe7d0e18d4982c1e9b2d9b42996392d14cada23824467fbf84c9c34c9bc9c16319060600160405180910390a35050505050565b60055460005b8181101561061c57610ad6816106f7565b600101610ac5565b610ae66113c4565b610af060006114d9565b565b60008060058581548110610b0857610b08611bcf565b60009182526020918290206040805160c081018252600690930290910180546001600160a01b0316835260018101549383019390935260028084015491830191909152600383015460608301526004830154608083015260059092015460a082015290549091501580610b7d57506020810151155b80610b885750600754155b15610b97576000915050610c79565b828410610ba8576000915050610c79565b80604001518311610bbd576000915050610c79565b80604001518411158015610bd5575080606001518311155b15610bf1576040810151610be99084611c34565b915050610c79565b80604001518411158015610c085750806060015183115b15610c215780604001518160600151610be99190611c34565b806040015184118015610c38575080606001518311155b15610c4757610be98484611c34565b80606001518411158015610c5e5750806060015183115b15610c7357838160600151610be99190611c34565b60009150505b9392505050565b6000610c8a61154a565b805490915060ff600160401b820416159067ffffffffffffffff16600081158015610cb25750825b905060008267ffffffffffffffff166001148015610ccf5750303b155b905081158015610cdd575080155b15610cfb5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610d2557845460ff60401b1916600160401b1785555b610d358d8d8d8d8d8d8d8d611573565b8315610d7b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b60008281526006602090815260408083206001600160a01b03851684529091528120600181015464e8d4a51000610dc086610de8565b8354610dcc9190611c47565b610dd69190611c5e565b610de09190611c34565b949350505050565b60008060058381548110610dfe57610dfe611bcf565b600091825260208083206040805160c08101825260069490940290910180546001600160a01b031680855260018201549385019390935260028101548483015260038101546060850152600480820154608086015260059091015460a0850181905291516370a0823160e01b8152309181019190915292945092916370a0823190602401602060405180830381865afa158015610e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec39190611c80565b90506000610ed686856080015143610af2565b90508115801590610ee657508015155b15610f41576000600754856020015160025484610f039190611c47565b610f0d9190611c47565b610f179190611c5e565b905082610f298264e8d4a51000611c47565b610f339190611c5e565b610f3d9085611c21565b9350505b5090949350505050565b610f536113c4565b6001600160a01b038116610f7d57604051631e4fbdf760e01b8152600060048201526024016105cd565b610f86816114d9565b50565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00805460011901610fcd57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b600060058381548110610fe857610fe8611bcf565b60009182526020808320868452600680835260408086206001600160a01b03891687529093529190932091029091019150611022846106f7565b805415611154576000816001015464e8d4a510008460050154846000015461104a9190611c47565b6110549190611c5e565b61105e9190611c34565b90508015611152576003546001600160a01b03166110e1576001546040516340c10f1960e01b81526001600160a01b03868116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b1580156110c457600080fd5b505af11580156110d8573d6000803e3d6000fd5b50505050611152565b60035460015460405163ae63932960e01b81526001600160a01b03918216600482015286821660248201526044810184905291169063ae63932990606401600060405180830381600087803b15801561113957600080fd5b505af115801561114d573d6000803e3d6000fd5b505050505b505b61115e84846117f4565b50505050565b6000806005858154811061117a5761117a611bcf565b60009182526020808320888452600680835260408086206001600160a01b03808c1688529452852094549302018054909450811691161480156111bc57508334145b1561122d5760008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561120f57600080fd5b505af1158015611223573d6000803e3d6000fd5b505050505061132c565b81546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112999190611c80565b83549091506112b3906001600160a01b0316873088611868565b82546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e9190611c80565b6113289190611c34565b9450505b838160000160008282546113409190611c21565b90915550611350905086866117f4565b85856001600160a01b03167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158660405161138c91815260200190565b60405180910390a35091949350505050565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b336113f67f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610af05760405163118cdaa760e01b81523360048201526024016105cd565b6000806005858154811061143557611435611bcf565b60009182526020808320888452600680835260408086206001600160a01b038b168752909352918420805493909202019350918591839190611478908490611c34565b90915550508154611493906001600160a01b031686866118cf565b61149d86866117f4565b85856001600160a01b03167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161138c91815260200190565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0061059e565b61157c88611905565b611584611916565b600080546001600160a01b038981166001600160a01b03199283161790925560018054898416908316179055600287905560038054928716929091169190911790556040518581527fb0864f3dd8e8d4f8f298a778d03bccfb0bc1114b8e89b686ae5a58c7d78a58759060200160405180910390a1604080516001600160a01b038981168252888116602083015286168183015290517fe86209b390e8076baf4c4a616512319eb81d91e8b1f8ca206e88c5ff1c264e149181900360600190a180156117ea576103e86007819055600580546001600160a01b038981166000818152600460209081526040808320869055805160c0810182528481528083018981528183018d815260608084018e81526080850188815260a0860189815260018d018e559c895294517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db06006909c029b8c0180546001600160a01b03191691909b161790995591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18a0155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db289015595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3880155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db487015595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db590950194909455845186815293840189905293830187905292917fe7d0e18d4982c1e9b2d9b42996392d14cada23824467fbf84c9c34c9bc9c1631910160405180910390a3505b5050505050505050565b60006005838154811061180957611809611bcf565b60009182526020808320868452600680835260408086206001600160a01b03891687529093529190932091029091016005810154825491935064e8d4a51000916118539190611c47565b61185d9190611c5e565b600190910155505050565b6040516001600160a01b03848116602483015283811660448301526064820183905261115e9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611926565b6040516001600160a01b0383811660248301526044820183905261190091859182169063a9059cbb9060640161189d565b505050565b61190d611997565b610f86816119bc565b61191e611997565b610af06119c4565b600080602060008451602086016000885af180611949576040513d6000823e3d81fd5b50506000513d9150811561196157806001141561196e565b6001600160a01b0384163b155b1561115e57604051635274afe760e01b81526001600160a01b03851660048201526024016105cd565b61199f6119cc565b610af057604051631afcd79f60e31b815260040160405180910390fd5b610f53611997565b61139e611997565b60006119d661154a565b54600160401b900460ff16919050565b6000602082840312156119f857600080fd5b5035919050565b80356001600160a01b0381168114611a1657600080fd5b919050565b600060208284031215611a2d57600080fd5b610c79826119ff565b60008060408385031215611a4957600080fd5b50508035926020909101359150565b80358015158114611a1657600080fd5b600080600080600060a08688031215611a8057600080fd5b611a89866119ff565b9450602086013593506040860135925060608601359150611aac60808701611a58565b90509295509295909350565b600080600080600060a08688031215611ad057600080fd5b85359450602086013593506040860135925060608601359150611aac60808701611a58565b600080600060608486031215611b0a57600080fd5b505081359360208301359350604090920135919050565b60008060408385031215611b3457600080fd5b82359150611b44602084016119ff565b90509250929050565b600080600080600080600080610100898b031215611b6a57600080fd5b611b73896119ff565b9750611b8160208a016119ff565b9650611b8f60408a016119ff565b955060608901359450611ba460808a016119ff565b935060a0890135925060c08901359150611bc060e08a01611a58565b90509295985092959890939650565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b125b9d985b1a5908141bdbdb60a21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561059e5761059e611c0b565b8181038181111561059e5761059e611c0b565b808202811582820484141761059e5761059e611c0b565b600082611c7b57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611c9257600080fd5b505191905056fea26469706673582212209fbf19ae1bb324acf04b91a08112db64bbc01563f6de180caba02c3f5373c9df64736f6c634300081e0033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MasterChef & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MasterChef__factory {
    return super.connect(runner) as MasterChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new Interface(_abi) as MasterChefInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MasterChef {
    return new Contract(address, _abi, runner) as unknown as MasterChef;
  }
}
