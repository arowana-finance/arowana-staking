/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  RewardVault,
  RewardVaultInterface,
} from "../../../../contracts/pools/RewardVault.sol/RewardVault.js";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newSpender",
        type: "address",
      },
    ],
    name: "AddSpender",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldSpender",
        type: "address",
      },
    ],
    name: "RemoveSpender",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Rewarded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "addSpender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "removeSpender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "sendTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spenders",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610a5b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ae6393291161005b578063ae63932914610102578063c4d66de814610115578063e7e31e7a14610128578063f2fde38b1461013b57600080fd5b8063124180381461008d578063715018a6146100ab5780638ce5877c146100b55780638da5cb5b146100c8575b600080fd5b61009561014e565b6040516100a29190610919565b60405180910390f35b6100b361015f565b005b6100b36100c336600461097a565b610173565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b0390911681526020016100a2565b6100b3610110366004610997565b610215565b6100b361012336600461097a565b6102ce565b6100b361013636600461097a565b610424565b6100b361014936600461097a565b6104bd565b606061015a60006104fb565b905090565b61016761050f565b610171600061056a565b565b61017b61050f565b6101866000826105db565b6101c95760405162461bcd60e51b815260206004820152600f60248201526e24a72b20a624a22fa9a822a72222a960891b60448201526064015b60405180910390fd5b6101d4600082610602565b506040516001600160a01b03821681527f508e01dc09a24291350cfc3ad6e6ee056cfa6df6780f82e57e60190be9f35524906020015b60405180910390a150565b6102206000336105db565b61025e5760405162461bcd60e51b815260206004820152600f60248201526e24a72b20a624a22fa9a822a72222a960891b60448201526064016101c0565b6102726001600160a01b0384168383610617565b816001600160a01b0316336001600160a01b0316846001600160a01b03167fa209447764afbca4d7c43c9962941f114f3465f7fde32167c76661eb75b3ef77846040516102c191815260200190565b60405180910390a4505050565b60006102d861066e565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156103005750825b905060008267ffffffffffffffff16600114801561031d5750303b155b90508115801561032b575080155b156103495760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561037357845460ff60401b1916600160401b1785555b6001600160a01b038616610385573395505b61038e86610697565b6103996000876106a8565b506040516001600160a01b03871681527ffb461a9d124e123750171741a89341defba2596b06be0c452e3e0f990c18bb9e9060200160405180910390a1831561041c57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b61042c61050f565b6104376000826105db565b156104785760405162461bcd60e51b8152602060048201526011602482015270222aa82624a1a0aa22afa9a822a72222a960791b60448201526064016101c0565b6104836000826106a8565b506040516001600160a01b03821681527ffb461a9d124e123750171741a89341defba2596b06be0c452e3e0f990c18bb9e9060200161020a565b6104c561050f565b6001600160a01b0381166104ef57604051631e4fbdf760e01b8152600060048201526024016101c0565b6104f88161056a565b50565b60606000610508836106bd565b9392505050565b336105417f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146101715760405163118cdaa760e01b81523360048201526024016101c0565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6001600160a01b038116600090815260018301602052604081205415155b90505b92915050565b60006105f9836001600160a01b038416610719565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261066990849061080c565b505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006105fc565b61069f610883565b6104f8816108a8565b60006105f9836001600160a01b0384166108b0565b60608160000180548060200260200160405190810160405280929190818152602001828054801561070d57602002820191906000526020600020905b8154815260200190600101908083116106f9575b50505050509050919050565b6000818152600183016020526040812054801561080257600061073d6001836109d8565b8554909150600090610751906001906109d8565b90508082146107b6576000866000018281548110610771576107716109f9565b9060005260206000200154905080876000018481548110610794576107946109f9565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806107c7576107c7610a0f565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105fc565b60009150506105fc565b600080602060008451602086016000885af18061082f576040513d6000823e3d81fd5b50506000513d91508115610847578060011415610854565b6001600160a01b0384163b155b1561087d57604051635274afe760e01b81526001600160a01b03851660048201526024016101c0565b50505050565b61088b6108ff565b61017157604051631afcd79f60e31b815260040160405180910390fd5b6104c5610883565b60008181526001830160205260408120546108f7575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105fc565b5060006105fc565b600061090961066e565b54600160401b900460ff16919050565b602080825282518282018190526000918401906040840190835b8181101561095a5783516001600160a01b0316835260209384019390920191600101610933565b509095945050505050565b6001600160a01b03811681146104f857600080fd5b60006020828403121561098c57600080fd5b813561050881610965565b6000806000606084860312156109ac57600080fd5b83356109b781610965565b925060208401356109c781610965565b929592945050506040919091013590565b818103818111156105fc57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212200941bed44abebd8250e1934e3201e4334cd94326c856ffa662509897db7ddd5d64736f6c634300081e0033";

type RewardVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardVaultConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardVault__factory extends ContractFactory {
  constructor(...args: RewardVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RewardVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RewardVault__factory {
    return super.connect(runner) as RewardVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardVaultInterface {
    return new Interface(_abi) as RewardVaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RewardVault {
    return new Contract(address, _abi, runner) as unknown as RewardVault;
  }
}
