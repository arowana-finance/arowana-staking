/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  MasterPool,
  MasterPoolInterface,
} from "../../../../contracts/pools/MasterPool.sol/MasterPool.js";

const _abi = [
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "WETH",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardVault",
        type: "address",
      },
    ],
    name: "InitializedChef",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint48",
        name: "halvingInterval",
        type: "uint48",
      },
    ],
    name: "SetHalvingInterval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "halvingRate",
        type: "uint16",
      },
    ],
    name: "SetHalvingRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newAllocPoint",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "startTime",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "endTime",
        type: "uint48",
      },
    ],
    name: "SetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "poolToken",
        type: "address",
      },
    ],
    name: "SetPoolToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardsPerSec",
        type: "uint256",
      },
    ],
    name: "SetRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "pid",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_allocPoint",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "_startTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_endTime",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "_deadline",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "depositPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint48",
        name: "_fromTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_toTime",
        type: "uint48",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint48",
        name: "_fromTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_toTime",
        type: "uint48",
      },
    ],
    name: "getPoolRewardsByTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    name: "getPoolRewardsPerSec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    name: "getRewardsPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "halvingInterval",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "halvingRate",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
    ],
    name: "hasPoolToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardsPerSec",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "_startTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_endTime",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "addPool",
        type: "bool",
      },
    ],
    name: "initializeChef",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolTokenImplementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardsPerSec",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_halvingRate",
        type: "uint16",
      },
      {
        internalType: "uint48",
        name: "_halvingInterval",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_startTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_endTime",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "addPool",
        type: "bool",
      },
    ],
    name: "initializePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "poolDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolIdByTokens",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "allocPoint",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "startTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "endTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "lastRewardTime",
        type: "uint48",
      },
      {
        internalType: "uint256",
        name: "accRewardsPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "poolMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolTokenImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "poolTokens",
    outputs: [
      {
        internalType: "contract IERC4626Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "poolTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "poolWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardVault",
    outputs: [
      {
        internalType: "contract IRewardVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerSec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "_allocPoint",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "_startTime",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_endTime",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "_halvingInterval",
        type: "uint48",
      },
    ],
    name: "setHalvingInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_halvingRate",
        type: "uint16",
      },
    ],
    name: "setHalvingRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerSec",
        type: "uint256",
      },
    ],
    name: "setRewardsPerSec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_pid",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506016601a565b60ca565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560695760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b612f7c806100d96000396000f3fe60806040526004361061023e5760003560e01c806377ba79501161012e578063cf2770d6116100ab578063f2fde38b1161006f578063f2fde38b14610804578063f64ba28b14610824578063f7c618c114610844578063f83a9e8714610864578063ff51a2721461088457600080fd5b8063cf2770d614610730578063d3efaf3a14610750578063db2aa12714610770578063e907d8c014610790578063efaf0597146107b057600080fd5b80638da5cb5b116100f25780638da5cb5b14610662578063950075761461069f578063aa020654146106bf578063ad5c4648146106f0578063cd09525d1461071057600080fd5b806377ba7950146105d45780637b9eac7c146105f45780637e6335f414610614578063859fe6c71461062f5780638af96a661461064257600080fd5b80633a2c6777116101bc578063630b5ba111610180578063630b5ba11461051057806369eb9cdb1461052557806369ff74f11461055b5780636a47aa0614610583578063715018a6146105bf57600080fd5b80633a2c6777146104585780633c9e4e3e146104905780633d912033146104b05780634fb4bb8c146104d057806361249d86146104f057600080fd5b8063171e82a211610203578063171e82a2146103a657806317c52c47146103c657806317caf6f1146103e6578063192e30f8146104185780632e7980a21461043857600080fd5b80628934521461029f57806304075399146102c8578063081e3eda146102e85780631246dbf51461030c5780631526fe271461033c57600080fd5b3661029a576000546001600160a01b0316330361025757005b60005461026c906001600160a01b03166108b5565b1561029857600080546001600160a01b03168152600460205260409020546102989061ffff1634610927565b005b600080fd5b3480156102ab57600080fd5b506102b560035481565b6040519081526020015b60405180910390f35b3480156102d457600080fd5b506102986102e33660046128a9565b6109a7565b3480156102f457600080fd5b506005545b60405161ffff90911681526020016102bf565b34801561031857600080fd5b5061032c6103273660046128de565b6108b5565b60405190151581526020016102bf565b34801561034857600080fd5b5061035c6103573660046128a9565b6109eb565b604080516001600160a01b03909716875263ffffffff909516602087015265ffffffffffff93841694860194909452908216606085015216608083015260a082015260c0016102bf565b3480156103b257600080fd5b506102986103c1366004612945565b610a55565b3480156103d257600080fd5b506102986103e13660046129aa565b610c6f565b3480156103f257600080fd5b506007546104039063ffffffff1681565b60405163ffffffff90911681526020016102bf565b34801561042457600080fd5b506102986104333660046129c5565b610ccd565b34801561044457600080fd5b506102f9610453366004612a02565b610e37565b34801561046457600080fd5b50600254610478906001600160a01b031681565b6040516001600160a01b0390911681526020016102bf565b34801561049c57600080fd5b506102986104ab366004612a23565b610fa9565b3480156104bc57600080fd5b506102986104cb366004612ab3565b61115d565b3480156104dc57600080fd5b5061032c6104eb3660046128de565b6111a5565b3480156104fc57600080fd5b506102b561050b366004612add565b611207565b34801561051c57600080fd5b5061029861121e565b34801561053157600080fd5b50610478610540366004612add565b6008602052600090815260409020546001600160a01b031681565b34801561056757600080fd5b506007546104789064010000000090046001600160a01b031681565b34801561058f57600080fd5b50600a546105a89062010000900465ffffffffffff1681565b60405165ffffffffffff90911681526020016102bf565b3480156105cb57600080fd5b50610298611249565b3480156105e057600080fd5b506102986105ef366004612af8565b61125d565b34801561060057600080fd5b506105a861060f366004612b14565b6112b8565b34801561062057600080fd5b50600a546102f99061ffff1681565b61029861063d366004612ab3565b610927565b34801561064e57600080fd5b5061029861065d366004612add565b611395565b34801561066e57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610478565b3480156106ab57600080fd5b506102986106ba366004612b6d565b6113e1565b3480156106cb57600080fd5b506102f96106da3660046128de565b60096020526000908152604090205461ffff1681565b3480156106fc57600080fd5b50600054610478906001600160a01b031681565b34801561071c57600080fd5b5061029861072b3660046128de565b6114bc565b34801561073c57600080fd5b5061029861074b366004612add565b61154e565b34801561075c57600080fd5b5061029861076b366004612c51565b6115ae565b34801561077c57600080fd5b5061029861078b366004612af8565b611609565b34801561079c57600080fd5b506102b56107ab366004612d16565b61165d565b3480156107bc57600080fd5b506107ef6107cb366004612d16565b60066020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016102bf565b34801561081057600080fd5b5061029861081f3660046128de565b6116c0565b34801561083057600080fd5b506102b561083f366004612add565b6116fe565b34801561085057600080fd5b50600154610478906001600160a01b031681565b34801561087057600080fd5b506102b561087f366004612b14565b61183e565b34801561089057600080fd5b506102f961089f3660046128de565b60046020526000908152604090205461ffff1681565b6001600160a01b03811660009081526004602052604081205461ffff16151580610921575060055460011480156109215750816001600160a01b0316600560008154811061090557610905612d49565b60009182526020909120600390910201546001600160a01b0316145b92915050565b61092f611ad2565b60055461ffff83161061095d5760405162461bcd60e51b815260040161095490612d5f565b60405180910390fd5b6109678233611b1c565b801561097a57610978823383611caf565b505b6109a360017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5050565b6109af611d67565b60038190556040518181527f403d953100676c530ee357c0fe9f352dc6c18bd4e8594c49d2107ecbad6a6f09906020015b60405180910390a150565b600581815481106109fb57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b038216935063ffffffff600160a01b8304169265ffffffffffff600160c01b90930483169281811692600160301b909204169086565b610a5d611d67565b60055461ffff861610610a825760405162461bcd60e51b815260040161095490612d5f565b8015610a9057610a9061121e565b8360058661ffff1681548110610aa857610aa8612d49565b6000918252602090912060039091020154600754610ad69163ffffffff600160a01b90910481169116612d9b565b610ae09190612db7565b600760006101000a81548163ffffffff021916908363ffffffff1602179055508360058661ffff1681548110610b1857610b18612d49565b906000526020600020906003020160000160146101000a81548163ffffffff021916908363ffffffff1602179055508260058661ffff1681548110610b5f57610b5f612d49565b906000526020600020906003020160000160186101000a81548165ffffffffffff021916908365ffffffffffff1602179055508160058661ffff1681548110610baa57610baa612d49565b906000526020600020906003020160010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060058561ffff1681548110610bf457610bf4612d49565b6000918252602091829020600390910201546040805163ffffffff8816815265ffffffffffff80881694820194909452928516908301526001600160a01b03169061ffff8716907f68a8292d2ea1e779a0f3ac4b3d3958c3fbc336064432311947b08a714bcbf8409060600160405180910390a35050505050565b610c77611d67565b600a805467ffffffffffff000019166201000065ffffffffffff8416908102919091179091556040519081527f3cf3f9e376cc97abf512b97a34cd163a9e3eb003aac711f2bc23ac363f3749db906020016109e0565b610cd6336111a5565b610cf25760405162461bcd60e51b815260040161095490612dd3565b3360009081526009602090815260408083205461ffff16808452600683528184206001600160a01b03888116808752919094528285209387168552919093209015801590610d41575081548411155b15610db35783826000016000828254610d5a9190612df5565b90915550610d6a90508387611ddd565b8261ffff16866001600160a01b03167f4e2ebfe79f50514ade8e774c7f3c01250d6aa3a91cd1f5c33a78df9c459f6e9d86604051610daa91815260200190565b60405180910390a35b6001600160a01b03851615610e2f5783816000016000828254610dd69190612e08565b90915550610de690508386611ddd565b8261ffff16856001600160a01b03167f2c00706df3fbb4a8ead830d4c0a7f278823843af15ad7e680c4f7db763dd779c86604051610e2691815260200190565b60405180910390a35b505050505050565b6000610e41611d67565b610e4e8686868686611e5a565b600754604051606089901b6bffffffffffffffffffffffff19166020820152919250600091610ea79164010000000090046001600160a01b031690603401604051602081830303815290604052805190602001206120bd565b600154604051630367f0b360e41b815230600482015261ffff851660248201526001600160a01b038a81166044830152918216606482015291925082919082169063367f0b3090608401600060405180830381600087803b158015610f0b57600080fd5b505af1158015610f1f573d6000803e3d6000fd5b5050505061ffff8316600081815260086020908152604080832080546001600160a01b0319166001600160a01b038781169190911790915586168084526009835292819020805461ffff191685179055519182527ffaaf525512a973415b1e0c1013407f1249e700df4f7ef24c051bc874434d66b4910160405180910390a2505095945050505050565b6000610fb36120cb565b805490915060ff600160401b820416159067ffffffffffffffff16600081158015610fdb5750825b905060008267ffffffffffffffff166001148015610ff85750303b155b905081158015611006575080155b156110245760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561104e57845460ff60401b1916600160401b1785555b6110566120f4565b600080546001600160a01b03808f166001600160a01b031992831617909255600180548e841690831617905560028054928d169290911691909117905561109c896109a7565b85156110b4576110b28b6103e88a8a6000610e37565b505b6110bd8d612104565b604080516001600160a01b038e811682528d811660208301528c168183015290517fe86209b390e8076baf4c4a616512319eb81d91e8b1f8ca206e88c5ff1c264e149181900360600190a1831561114e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b611165611ad2565b60055461ffff83161061118a5760405162461bcd60e51b815260040161095490612d5f565b6111948233611b1c565b801561097a57610978823383612115565b6001600160a01b03811660009081526009602052604081205461ffff161515806109215750506000805260086020527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c7546001600160a01b0391821691161490565b600061092182611218600142612df5565b4261183e565b60055460005b818161ffff1610156109a3576112398161154e565b61124281612e1b565b9050611224565b611251611d67565b61125b6000612170565b565b611266336111a5565b6112825760405162461bcd60e51b815260040161095490612dd3565b3360009081526009602052604090205461ffff166112a08184611b1c565b81156112b3576112b1818484611caf565b505b505050565b60008165ffffffffffff168365ffffffffffff16106112d95750600061138e565b600060058561ffff16815481106112f2576112f2612d49565b6000918252602082206003909102018054600182015491935065ffffffffffff600160c01b9091048116929181169190871683106113305782611332565b865b905060008265ffffffffffff168765ffffffffffff16106113535782611355565b865b90508065ffffffffffff168265ffffffffffff161061137c5760009550505050505061138e565b6113868282612e3c565b955050505050505b9392505050565b61139d611d67565b600a805461ffff191661ffff83169081179091556040519081527f6c8d6880a607b5400f9b0ad0718c6c3c499da1d676ddfc670abbae188543112c906020016109e0565b60008060006113ef846121e1565b92509250925060058761ffff168154811061140c5761140c612d49565b600091825260209091206003909102015460405163d505accf60e01b81523360048201523060248201526044810188905265ffffffffffff8716606482015260ff8516608482015260a4810184905260c481018390526001600160a01b039091169063d505accf9060e401600060405180830381600087803b15801561149157600080fd5b505af11580156114a5573d6000803e3d6000fd5b505050506114b38787610927565b50505050505050565b6114c5336111a5565b6114e15760405162461bcd60e51b815260040161095490612dd3565b336000908152600960205260409020546001546005805461ffff909316926001600160a01b03909216918390811061151b5761151b612d49565b60009182526020909120600390910201546001600160a01b031614611544576109a38183611b1c565b6109a3818361222b565b600060058261ffff168154811061156757611567612d49565b90600052602060002090600302019050611580826116fe565b600282015560010180546bffffffffffff0000000000001916600160301b4265ffffffffffff160217905550565b6115b785611395565b6115c084610c6f565b6115d08b8b8a8a8a888888610fa9565b5050600780546001600160a01b0390981664010000000002640100000000600160c01b0319909816979097179096555050505050505050565b611612336111a5565b61162e5760405162461bcd60e51b815260040161095490612dd3565b3360009081526009602052604090205461ffff1661164c8184611b1c565b81156112b3576112b1818484612115565b61ffff821660009081526006602090815260408083206001600160a01b03851684529091528120600181015464e8d4a51000611698866116fe565b83546116a49190612e5a565b6116ae9190612e87565b6116b89190612df5565b949350505050565b6116c8611d67565b6001600160a01b0381166116f257604051631e4fbdf760e01b815260006004820152602401610954565b6116fb81612170565b50565b60008060058361ffff168154811061171857611718612d49565b600091825260208083206040805160c08101825260039490940290910180546001600160a01b038116808652600160a01b820463ffffffff1694860194909452600160c01b900465ffffffffffff9081168584015260018201548082166060870152600160301b90041660808501526002015460a0840181905290516370a0823160e01b815230600482015292945092916370a0823190602401602060405180830381865afa1580156117cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f39190612e9b565b9050801561183657600061180c8685608001514261183e565b90508161181e8264e8d4a51000612e5a565b6118289190612e87565b6118329084612e08565b9250505b509392505050565b60008165ffffffffffff168365ffffffffffff16101580611865575060075463ffffffff16155b156118725750600061138e565b600060058561ffff168154811061188b5761188b612d49565b6000918252602082206003909102018054600182015491935065ffffffffffff600160c01b9091048116929181169190871683106118c957826118cb565b865b905060008265ffffffffffff168765ffffffffffff16106118ec57826118ee565b865b90508065ffffffffffff168265ffffffffffff16106119155760009550505050505061138e565b600a5462010000900465ffffffffffff1660000361198657600754855460035463ffffffff92831692600160a01b909204909116906119548585612e3c565b65ffffffffffff166119669190612e5a565b6119709190612e5a565b61197a9190612e87565b9550505050505061138e565b600354600a54600091908490839062010000900465ffffffffffff166119ac8984612e3c565b6119b69190612eb4565b90505b8465ffffffffffff168265ffffffffffff161080156119d757508215155b15611a9757600a5460009062010000900465ffffffffffff166119fb836001612ee0565b611a059190612efe565b611a0f908a612ee0565b905060008165ffffffffffff168765ffffffffffff1610611a305781611a32565b865b905084611a3f8583612e3c565b65ffffffffffff16611a519190612e5a565b611a5b9087612e08565b600a549096509093508390606490611a779061ffff1687612e5a565b611a819190612e87565b945082611a8d81612f26565b93505050506119b9565b600754895463ffffffff91821691611ab791600160a01b90041686612e5a565b611ac19190612e87565b9d9c50505050505050505050505050565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00805460011901611b1657604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b600060058361ffff1681548110611b3557611b35612d49565b6000918252602080832061ffff871684526006825260408085206001600160a01b0388168652909252922060039091029091019150611b738461154e565b805415611ca5576000816001015464e8d4a5100084600201548460000154611b9b9190612e5a565b611ba59190612e87565b611baf9190612df5565b90508015611ca3576002546001600160a01b0316611c32576001546040516340c10f1960e01b81526001600160a01b03868116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b158015611c1557600080fd5b505af1158015611c29573d6000803e3d6000fd5b50505050611ca3565b60025460015460405163ae63932960e01b81526001600160a01b03918216600482015286821660248201526044810184905291169063ae63932990606401600060405180830381600087803b158015611c8a57600080fd5b505af1158015611c9e573d6000803e3d6000fd5b505050505b505b6112b18484611ddd565b600080611cbd8585856123aa565b61ffff861660009081526008602052604090819020549051631b96b2f960e01b81526001600160a01b03878116600483015260248201849052929350911690631b96b2f9906044015b600060405180830381600087803b158015611d2057600080fd5b505af1158015611d34573d6000803e3d6000fd5b5092979650505050505050565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6000611d9a7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b90506001600160a01b0381163314801590611dbd57506001600160a01b03811615155b156116fb5760405163118cdaa760e01b8152336004820152602401610954565b600060058361ffff1681548110611df657611df6612d49565b6000918252602080832061ffff871684526006825260408085206001600160a01b038816865290925292206002600390920290920190810154825491935064e8d4a5100091611e459190612e5a565b611e4f9190612e87565b600190910155505050565b6000611e64611d67565b611e6d866108b5565b15611eac5760405162461bcd60e51b815260206004820152600f60248201526e111d5c1b1a58d85d195908141bdbdb608a1b6044820152606401610954565b8115611eba57611eba61121e565b5060055460078054869190600090611ed990849063ffffffff16612db7565b825463ffffffff9182166101009390930a9283029282021916919091179091556001600160a01b038089166000818152600460209081526040808320805461ffff8a1661ffff199091168117909155815160c0810183528581528d881693810193845265ffffffffffff808e168285019081528d8216606084019081526080840188815260a08501898152600580546001810182559a52945160039099027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db081018054995194518616600160c01b0265ffffffffffff60c01b1995909e16600160a01b026001600160c01b0319909a169a909c169990991797909717919091169990991790975596517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18501805494518816600160301b026bffffffffffffffffffffffff1990951691909716179290921790945593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db29091015590519092507f68a8292d2ea1e779a0f3ac4b3d3958c3fbc336064432311947b08a714bcbf840906120ac9089908990899063ffffffff93909316835265ffffffffffff918216602084015216604082015260600190565b60405180910390a395945050505050565b600061138e838360006125f2565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610921565b6120fc612689565b61125b6126ae565b61210c612689565b6116fb816126b6565b6000806121238585856126be565b61ffff861660009081526008602052604090819020549051639fc8ae6d60e01b81526001600160a01b03878116600483015260248201849052929350911690639fc8ae6d90604401611d06565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000806000835160410361220b5750505060208101516040820151606083015160001a9190612224565b604051634be6321b60e01b815260040160405180910390fd5b9193909250565b600060058361ffff168154811061224457612244612d49565b6000918252602080832061ffff871684526006825260408085206001600160a01b03881686529092529220600390910290910191506122828461154e565b805415611ca5576000816001015464e8d4a51000846002015484600001546122aa9190612e5a565b6122b49190612e87565b6122be9190612df5565b90508015611ca357808260000160008282546122da9190612e08565b909155505061ffff851660009081526008602052604090819020549051631b96b2f960e01b81526001600160a01b0386811660048301526024820184905290911690631b96b2f990604401600060405180830381600087803b15801561233f57600080fd5b505af1158015612353573d6000803e3d6000fd5b505050508461ffff16846001600160a01b03167f2c00706df3fbb4a8ead830d4c0a7f278823843af15ad7e680c4f7db763dd779c8360405161239791815260200190565b60405180910390a3506112b18484611ddd565b60008060058561ffff16815481106123c4576123c4612d49565b6000918252602080832061ffff891684526006825260408085206001600160a01b03808b16875293528420935460039093020180549094508116911614801561240c57508334145b1561247d5760008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561245f57600080fd5b505af1158015612473573d6000803e3d6000fd5b505050505061257c565b81546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156124c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e99190612e9b565b8354909150612503906001600160a01b0316873088612786565b82546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561254a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061256e9190612e9b565b6125789190612df5565b9450505b838160000160008282546125909190612e08565b909155506125a090508686611ddd565b8561ffff16856001600160a01b03167f2c00706df3fbb4a8ead830d4c0a7f278823843af15ad7e680c4f7db763dd779c866040516125e091815260200190565b60405180910390a35091949350505050565b60008147101561261e5760405163cf47918160e01b815247600482015260248101839052604401610954565b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c176000526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f590506001600160a01b03811661138e5760405163b06ebf3d60e01b815260040160405180910390fd5b6126916127ed565b61125b57604051631afcd79f60e31b815260040160405180910390fd5b611d41612689565b6116c8612689565b60008060058561ffff16815481106126d8576126d8612d49565b6000918252602080832061ffff891684526006825260408085206001600160a01b038a168652909252908320805460039093029091019350918591839190612721908490612df5565b9091555050815461273c906001600160a01b03168686612807565b6127468686611ddd565b8561ffff16856001600160a01b03167f4e2ebfe79f50514ade8e774c7f3c01250d6aa3a91cd1f5c33a78df9c459f6e9d866040516125e091815260200190565b6040516001600160a01b0384811660248301528381166044830152606482018390526112b19186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050612838565b60006127f76120cb565b54600160401b900460ff16919050565b6040516001600160a01b038381166024830152604482018390526112b391859182169063a9059cbb906064016127bb565b600080602060008451602086016000885af18061285b576040513d6000823e3d81fd5b50506000513d91508115612873578060011415612880565b6001600160a01b0384163b155b156112b157604051635274afe760e01b81526001600160a01b0385166004820152602401610954565b6000602082840312156128bb57600080fd5b5035919050565b80356001600160a01b03811681146128d957600080fd5b919050565b6000602082840312156128f057600080fd5b61138e826128c2565b803561ffff811681146128d957600080fd5b803563ffffffff811681146128d957600080fd5b803565ffffffffffff811681146128d957600080fd5b803580151581146128d957600080fd5b600080600080600060a0868803121561295d57600080fd5b612966866128f9565b94506129746020870161290b565b93506129826040870161291f565b92506129906060870161291f565b915061299e60808701612935565b90509295509295909350565b6000602082840312156129bc57600080fd5b61138e8261291f565b6000806000606084860312156129da57600080fd5b6129e3846128c2565b92506129f1602085016128c2565b929592945050506040919091013590565b600080600080600060a08688031215612a1a57600080fd5b612966866128c2565b600080600080600080600080610100898b031215612a4057600080fd5b612a49896128c2565b9750612a5760208a016128c2565b9650612a6560408a016128c2565b9550612a7360608a016128c2565b945060808901359350612a8860a08a0161291f565b9250612a9660c08a0161291f565b9150612aa460e08a01612935565b90509295985092959890939650565b60008060408385031215612ac657600080fd5b612acf836128f9565b946020939093013593505050565b600060208284031215612aef57600080fd5b61138e826128f9565b60008060408385031215612b0b57600080fd5b612acf836128c2565b600080600060608486031215612b2957600080fd5b612b32846128f9565b9250612b406020850161291f565b9150612b4e6040850161291f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612b8357600080fd5b612b8c856128f9565b935060208501359250612ba16040860161291f565b9150606085013567ffffffffffffffff811115612bbd57600080fd5b8501601f81018713612bce57600080fd5b803567ffffffffffffffff811115612be857612be8612b57565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715612c1757612c17612b57565b604052818152828201602001891015612c2f57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060008060008060008060008060006101608c8e031215612c7357600080fd5b612c7c8c6128c2565b9a50612c8a60208d016128c2565b9950612c9860408d016128c2565b9850612ca660608d016128c2565b9750612cb460808d016128c2565b965060a08c01359550612cc960c08d016128f9565b9450612cd760e08d0161291f565b9350612ce66101008d0161291f565b9250612cf56101208d0161291f565b9150612d046101408d01612935565b90509295989b509295989b9093969950565b60008060408385031215612d2957600080fd5b612d32836128f9565b9150612d40602084016128c2565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b125b9d985b1a5908141bdbdb60a21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b63ffffffff828116828216039081111561092157610921612d85565b63ffffffff818116838216019081111561092157610921612d85565b6020808252600890820152671393d517d413d3d360c21b604082015260600190565b8181038181111561092157610921612d85565b8082018082111561092157610921612d85565b600061ffff821661ffff8103612e3357612e33612d85565b60010192915050565b65ffffffffffff828116828216039081111561092157610921612d85565b808202811582820484141761092157610921612d85565b634e487b7160e01b600052601260045260246000fd5b600082612e9657612e96612e71565b500490565b600060208284031215612ead57600080fd5b5051919050565b600065ffffffffffff831680612ecc57612ecc612e71565b8065ffffffffffff84160491505092915050565b65ffffffffffff818116838216019081111561092157610921612d85565b65ffffffffffff8181168382160290811690818114612f1f57612f1f612d85565b5092915050565b600065ffffffffffff821665ffffffffffff8103612e3357612e33612d8556fea264697066735822122095aeb246d96729bbff38c7a4a70eeaec7b3ac47d5ab15d2e5a45f0a42cb927ce64736f6c634300081e0033";

type MasterPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterPoolConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterPool__factory extends ContractFactory {
  constructor(...args: MasterPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MasterPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MasterPool__factory {
    return super.connect(runner) as MasterPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterPoolInterface {
    return new Interface(_abi) as MasterPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MasterPool {
    return new Contract(address, _abi, runner) as unknown as MasterPool;
  }
}
